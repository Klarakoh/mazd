#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6723270188322560730) {
   out_6723270188322560730[0] = 0;
   out_6723270188322560730[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6723270188322560730[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6723270188322560730[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6723270188322560730[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6723270188322560730[5] = -sin(in_vec[1]);
   out_6723270188322560730[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6723270188322560730[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6723270188322560730[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6723270188322560730[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6723270188322560730[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6723270188322560730[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6723270188322560730[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6723270188322560730[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6723270188322560730[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6723270188322560730[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6723270188322560730[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6723270188322560730[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4473607639701987721) {
   out_4473607639701987721[0] = delta_x[0] + nom_x[0];
   out_4473607639701987721[1] = delta_x[1] + nom_x[1];
   out_4473607639701987721[2] = delta_x[2] + nom_x[2];
   out_4473607639701987721[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4473607639701987721[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4473607639701987721[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4473607639701987721[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4473607639701987721[7] = delta_x[6] + nom_x[7];
   out_4473607639701987721[8] = delta_x[7] + nom_x[8];
   out_4473607639701987721[9] = delta_x[8] + nom_x[9];
   out_4473607639701987721[10] = delta_x[9] + nom_x[10];
   out_4473607639701987721[11] = delta_x[10] + nom_x[11];
   out_4473607639701987721[12] = delta_x[11] + nom_x[12];
   out_4473607639701987721[13] = delta_x[12] + nom_x[13];
   out_4473607639701987721[14] = delta_x[13] + nom_x[14];
   out_4473607639701987721[15] = delta_x[14] + nom_x[15];
   out_4473607639701987721[16] = delta_x[15] + nom_x[16];
   out_4473607639701987721[17] = delta_x[16] + nom_x[17];
   out_4473607639701987721[18] = delta_x[17] + nom_x[18];
   out_4473607639701987721[19] = delta_x[18] + nom_x[19];
   out_4473607639701987721[20] = delta_x[19] + nom_x[20];
   out_4473607639701987721[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4669519886941048090) {
   out_4669519886941048090[0] = -nom_x[0] + true_x[0];
   out_4669519886941048090[1] = -nom_x[1] + true_x[1];
   out_4669519886941048090[2] = -nom_x[2] + true_x[2];
   out_4669519886941048090[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4669519886941048090[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4669519886941048090[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4669519886941048090[6] = -nom_x[7] + true_x[7];
   out_4669519886941048090[7] = -nom_x[8] + true_x[8];
   out_4669519886941048090[8] = -nom_x[9] + true_x[9];
   out_4669519886941048090[9] = -nom_x[10] + true_x[10];
   out_4669519886941048090[10] = -nom_x[11] + true_x[11];
   out_4669519886941048090[11] = -nom_x[12] + true_x[12];
   out_4669519886941048090[12] = -nom_x[13] + true_x[13];
   out_4669519886941048090[13] = -nom_x[14] + true_x[14];
   out_4669519886941048090[14] = -nom_x[15] + true_x[15];
   out_4669519886941048090[15] = -nom_x[16] + true_x[16];
   out_4669519886941048090[16] = -nom_x[17] + true_x[17];
   out_4669519886941048090[17] = -nom_x[18] + true_x[18];
   out_4669519886941048090[18] = -nom_x[19] + true_x[19];
   out_4669519886941048090[19] = -nom_x[20] + true_x[20];
   out_4669519886941048090[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5199872580074790941) {
   out_5199872580074790941[0] = 1.0;
   out_5199872580074790941[1] = 0;
   out_5199872580074790941[2] = 0;
   out_5199872580074790941[3] = 0;
   out_5199872580074790941[4] = 0;
   out_5199872580074790941[5] = 0;
   out_5199872580074790941[6] = 0;
   out_5199872580074790941[7] = 0;
   out_5199872580074790941[8] = 0;
   out_5199872580074790941[9] = 0;
   out_5199872580074790941[10] = 0;
   out_5199872580074790941[11] = 0;
   out_5199872580074790941[12] = 0;
   out_5199872580074790941[13] = 0;
   out_5199872580074790941[14] = 0;
   out_5199872580074790941[15] = 0;
   out_5199872580074790941[16] = 0;
   out_5199872580074790941[17] = 0;
   out_5199872580074790941[18] = 0;
   out_5199872580074790941[19] = 0;
   out_5199872580074790941[20] = 0;
   out_5199872580074790941[21] = 0;
   out_5199872580074790941[22] = 1.0;
   out_5199872580074790941[23] = 0;
   out_5199872580074790941[24] = 0;
   out_5199872580074790941[25] = 0;
   out_5199872580074790941[26] = 0;
   out_5199872580074790941[27] = 0;
   out_5199872580074790941[28] = 0;
   out_5199872580074790941[29] = 0;
   out_5199872580074790941[30] = 0;
   out_5199872580074790941[31] = 0;
   out_5199872580074790941[32] = 0;
   out_5199872580074790941[33] = 0;
   out_5199872580074790941[34] = 0;
   out_5199872580074790941[35] = 0;
   out_5199872580074790941[36] = 0;
   out_5199872580074790941[37] = 0;
   out_5199872580074790941[38] = 0;
   out_5199872580074790941[39] = 0;
   out_5199872580074790941[40] = 0;
   out_5199872580074790941[41] = 0;
   out_5199872580074790941[42] = 0;
   out_5199872580074790941[43] = 0;
   out_5199872580074790941[44] = 1.0;
   out_5199872580074790941[45] = 0;
   out_5199872580074790941[46] = 0;
   out_5199872580074790941[47] = 0;
   out_5199872580074790941[48] = 0;
   out_5199872580074790941[49] = 0;
   out_5199872580074790941[50] = 0;
   out_5199872580074790941[51] = 0;
   out_5199872580074790941[52] = 0;
   out_5199872580074790941[53] = 0;
   out_5199872580074790941[54] = 0;
   out_5199872580074790941[55] = 0;
   out_5199872580074790941[56] = 0;
   out_5199872580074790941[57] = 0;
   out_5199872580074790941[58] = 0;
   out_5199872580074790941[59] = 0;
   out_5199872580074790941[60] = 0;
   out_5199872580074790941[61] = 0;
   out_5199872580074790941[62] = 0;
   out_5199872580074790941[63] = 0;
   out_5199872580074790941[64] = 0;
   out_5199872580074790941[65] = 0;
   out_5199872580074790941[66] = -0.5*state[4];
   out_5199872580074790941[67] = -0.5*state[5];
   out_5199872580074790941[68] = -0.5*state[6];
   out_5199872580074790941[69] = 0;
   out_5199872580074790941[70] = 0;
   out_5199872580074790941[71] = 0;
   out_5199872580074790941[72] = 0;
   out_5199872580074790941[73] = 0;
   out_5199872580074790941[74] = 0;
   out_5199872580074790941[75] = 0;
   out_5199872580074790941[76] = 0;
   out_5199872580074790941[77] = 0;
   out_5199872580074790941[78] = 0;
   out_5199872580074790941[79] = 0;
   out_5199872580074790941[80] = 0;
   out_5199872580074790941[81] = 0;
   out_5199872580074790941[82] = 0;
   out_5199872580074790941[83] = 0;
   out_5199872580074790941[84] = 0;
   out_5199872580074790941[85] = 0;
   out_5199872580074790941[86] = 0;
   out_5199872580074790941[87] = 0.5*state[3];
   out_5199872580074790941[88] = 0.5*state[6];
   out_5199872580074790941[89] = -0.5*state[5];
   out_5199872580074790941[90] = 0;
   out_5199872580074790941[91] = 0;
   out_5199872580074790941[92] = 0;
   out_5199872580074790941[93] = 0;
   out_5199872580074790941[94] = 0;
   out_5199872580074790941[95] = 0;
   out_5199872580074790941[96] = 0;
   out_5199872580074790941[97] = 0;
   out_5199872580074790941[98] = 0;
   out_5199872580074790941[99] = 0;
   out_5199872580074790941[100] = 0;
   out_5199872580074790941[101] = 0;
   out_5199872580074790941[102] = 0;
   out_5199872580074790941[103] = 0;
   out_5199872580074790941[104] = 0;
   out_5199872580074790941[105] = 0;
   out_5199872580074790941[106] = 0;
   out_5199872580074790941[107] = 0;
   out_5199872580074790941[108] = -0.5*state[6];
   out_5199872580074790941[109] = 0.5*state[3];
   out_5199872580074790941[110] = 0.5*state[4];
   out_5199872580074790941[111] = 0;
   out_5199872580074790941[112] = 0;
   out_5199872580074790941[113] = 0;
   out_5199872580074790941[114] = 0;
   out_5199872580074790941[115] = 0;
   out_5199872580074790941[116] = 0;
   out_5199872580074790941[117] = 0;
   out_5199872580074790941[118] = 0;
   out_5199872580074790941[119] = 0;
   out_5199872580074790941[120] = 0;
   out_5199872580074790941[121] = 0;
   out_5199872580074790941[122] = 0;
   out_5199872580074790941[123] = 0;
   out_5199872580074790941[124] = 0;
   out_5199872580074790941[125] = 0;
   out_5199872580074790941[126] = 0;
   out_5199872580074790941[127] = 0;
   out_5199872580074790941[128] = 0;
   out_5199872580074790941[129] = 0.5*state[5];
   out_5199872580074790941[130] = -0.5*state[4];
   out_5199872580074790941[131] = 0.5*state[3];
   out_5199872580074790941[132] = 0;
   out_5199872580074790941[133] = 0;
   out_5199872580074790941[134] = 0;
   out_5199872580074790941[135] = 0;
   out_5199872580074790941[136] = 0;
   out_5199872580074790941[137] = 0;
   out_5199872580074790941[138] = 0;
   out_5199872580074790941[139] = 0;
   out_5199872580074790941[140] = 0;
   out_5199872580074790941[141] = 0;
   out_5199872580074790941[142] = 0;
   out_5199872580074790941[143] = 0;
   out_5199872580074790941[144] = 0;
   out_5199872580074790941[145] = 0;
   out_5199872580074790941[146] = 0;
   out_5199872580074790941[147] = 0;
   out_5199872580074790941[148] = 0;
   out_5199872580074790941[149] = 0;
   out_5199872580074790941[150] = 0;
   out_5199872580074790941[151] = 0;
   out_5199872580074790941[152] = 0;
   out_5199872580074790941[153] = 1.0;
   out_5199872580074790941[154] = 0;
   out_5199872580074790941[155] = 0;
   out_5199872580074790941[156] = 0;
   out_5199872580074790941[157] = 0;
   out_5199872580074790941[158] = 0;
   out_5199872580074790941[159] = 0;
   out_5199872580074790941[160] = 0;
   out_5199872580074790941[161] = 0;
   out_5199872580074790941[162] = 0;
   out_5199872580074790941[163] = 0;
   out_5199872580074790941[164] = 0;
   out_5199872580074790941[165] = 0;
   out_5199872580074790941[166] = 0;
   out_5199872580074790941[167] = 0;
   out_5199872580074790941[168] = 0;
   out_5199872580074790941[169] = 0;
   out_5199872580074790941[170] = 0;
   out_5199872580074790941[171] = 0;
   out_5199872580074790941[172] = 0;
   out_5199872580074790941[173] = 0;
   out_5199872580074790941[174] = 0;
   out_5199872580074790941[175] = 1.0;
   out_5199872580074790941[176] = 0;
   out_5199872580074790941[177] = 0;
   out_5199872580074790941[178] = 0;
   out_5199872580074790941[179] = 0;
   out_5199872580074790941[180] = 0;
   out_5199872580074790941[181] = 0;
   out_5199872580074790941[182] = 0;
   out_5199872580074790941[183] = 0;
   out_5199872580074790941[184] = 0;
   out_5199872580074790941[185] = 0;
   out_5199872580074790941[186] = 0;
   out_5199872580074790941[187] = 0;
   out_5199872580074790941[188] = 0;
   out_5199872580074790941[189] = 0;
   out_5199872580074790941[190] = 0;
   out_5199872580074790941[191] = 0;
   out_5199872580074790941[192] = 0;
   out_5199872580074790941[193] = 0;
   out_5199872580074790941[194] = 0;
   out_5199872580074790941[195] = 0;
   out_5199872580074790941[196] = 0;
   out_5199872580074790941[197] = 1.0;
   out_5199872580074790941[198] = 0;
   out_5199872580074790941[199] = 0;
   out_5199872580074790941[200] = 0;
   out_5199872580074790941[201] = 0;
   out_5199872580074790941[202] = 0;
   out_5199872580074790941[203] = 0;
   out_5199872580074790941[204] = 0;
   out_5199872580074790941[205] = 0;
   out_5199872580074790941[206] = 0;
   out_5199872580074790941[207] = 0;
   out_5199872580074790941[208] = 0;
   out_5199872580074790941[209] = 0;
   out_5199872580074790941[210] = 0;
   out_5199872580074790941[211] = 0;
   out_5199872580074790941[212] = 0;
   out_5199872580074790941[213] = 0;
   out_5199872580074790941[214] = 0;
   out_5199872580074790941[215] = 0;
   out_5199872580074790941[216] = 0;
   out_5199872580074790941[217] = 0;
   out_5199872580074790941[218] = 0;
   out_5199872580074790941[219] = 1.0;
   out_5199872580074790941[220] = 0;
   out_5199872580074790941[221] = 0;
   out_5199872580074790941[222] = 0;
   out_5199872580074790941[223] = 0;
   out_5199872580074790941[224] = 0;
   out_5199872580074790941[225] = 0;
   out_5199872580074790941[226] = 0;
   out_5199872580074790941[227] = 0;
   out_5199872580074790941[228] = 0;
   out_5199872580074790941[229] = 0;
   out_5199872580074790941[230] = 0;
   out_5199872580074790941[231] = 0;
   out_5199872580074790941[232] = 0;
   out_5199872580074790941[233] = 0;
   out_5199872580074790941[234] = 0;
   out_5199872580074790941[235] = 0;
   out_5199872580074790941[236] = 0;
   out_5199872580074790941[237] = 0;
   out_5199872580074790941[238] = 0;
   out_5199872580074790941[239] = 0;
   out_5199872580074790941[240] = 0;
   out_5199872580074790941[241] = 1.0;
   out_5199872580074790941[242] = 0;
   out_5199872580074790941[243] = 0;
   out_5199872580074790941[244] = 0;
   out_5199872580074790941[245] = 0;
   out_5199872580074790941[246] = 0;
   out_5199872580074790941[247] = 0;
   out_5199872580074790941[248] = 0;
   out_5199872580074790941[249] = 0;
   out_5199872580074790941[250] = 0;
   out_5199872580074790941[251] = 0;
   out_5199872580074790941[252] = 0;
   out_5199872580074790941[253] = 0;
   out_5199872580074790941[254] = 0;
   out_5199872580074790941[255] = 0;
   out_5199872580074790941[256] = 0;
   out_5199872580074790941[257] = 0;
   out_5199872580074790941[258] = 0;
   out_5199872580074790941[259] = 0;
   out_5199872580074790941[260] = 0;
   out_5199872580074790941[261] = 0;
   out_5199872580074790941[262] = 0;
   out_5199872580074790941[263] = 1.0;
   out_5199872580074790941[264] = 0;
   out_5199872580074790941[265] = 0;
   out_5199872580074790941[266] = 0;
   out_5199872580074790941[267] = 0;
   out_5199872580074790941[268] = 0;
   out_5199872580074790941[269] = 0;
   out_5199872580074790941[270] = 0;
   out_5199872580074790941[271] = 0;
   out_5199872580074790941[272] = 0;
   out_5199872580074790941[273] = 0;
   out_5199872580074790941[274] = 0;
   out_5199872580074790941[275] = 0;
   out_5199872580074790941[276] = 0;
   out_5199872580074790941[277] = 0;
   out_5199872580074790941[278] = 0;
   out_5199872580074790941[279] = 0;
   out_5199872580074790941[280] = 0;
   out_5199872580074790941[281] = 0;
   out_5199872580074790941[282] = 0;
   out_5199872580074790941[283] = 0;
   out_5199872580074790941[284] = 0;
   out_5199872580074790941[285] = 1.0;
   out_5199872580074790941[286] = 0;
   out_5199872580074790941[287] = 0;
   out_5199872580074790941[288] = 0;
   out_5199872580074790941[289] = 0;
   out_5199872580074790941[290] = 0;
   out_5199872580074790941[291] = 0;
   out_5199872580074790941[292] = 0;
   out_5199872580074790941[293] = 0;
   out_5199872580074790941[294] = 0;
   out_5199872580074790941[295] = 0;
   out_5199872580074790941[296] = 0;
   out_5199872580074790941[297] = 0;
   out_5199872580074790941[298] = 0;
   out_5199872580074790941[299] = 0;
   out_5199872580074790941[300] = 0;
   out_5199872580074790941[301] = 0;
   out_5199872580074790941[302] = 0;
   out_5199872580074790941[303] = 0;
   out_5199872580074790941[304] = 0;
   out_5199872580074790941[305] = 0;
   out_5199872580074790941[306] = 0;
   out_5199872580074790941[307] = 1.0;
   out_5199872580074790941[308] = 0;
   out_5199872580074790941[309] = 0;
   out_5199872580074790941[310] = 0;
   out_5199872580074790941[311] = 0;
   out_5199872580074790941[312] = 0;
   out_5199872580074790941[313] = 0;
   out_5199872580074790941[314] = 0;
   out_5199872580074790941[315] = 0;
   out_5199872580074790941[316] = 0;
   out_5199872580074790941[317] = 0;
   out_5199872580074790941[318] = 0;
   out_5199872580074790941[319] = 0;
   out_5199872580074790941[320] = 0;
   out_5199872580074790941[321] = 0;
   out_5199872580074790941[322] = 0;
   out_5199872580074790941[323] = 0;
   out_5199872580074790941[324] = 0;
   out_5199872580074790941[325] = 0;
   out_5199872580074790941[326] = 0;
   out_5199872580074790941[327] = 0;
   out_5199872580074790941[328] = 0;
   out_5199872580074790941[329] = 1.0;
   out_5199872580074790941[330] = 0;
   out_5199872580074790941[331] = 0;
   out_5199872580074790941[332] = 0;
   out_5199872580074790941[333] = 0;
   out_5199872580074790941[334] = 0;
   out_5199872580074790941[335] = 0;
   out_5199872580074790941[336] = 0;
   out_5199872580074790941[337] = 0;
   out_5199872580074790941[338] = 0;
   out_5199872580074790941[339] = 0;
   out_5199872580074790941[340] = 0;
   out_5199872580074790941[341] = 0;
   out_5199872580074790941[342] = 0;
   out_5199872580074790941[343] = 0;
   out_5199872580074790941[344] = 0;
   out_5199872580074790941[345] = 0;
   out_5199872580074790941[346] = 0;
   out_5199872580074790941[347] = 0;
   out_5199872580074790941[348] = 0;
   out_5199872580074790941[349] = 0;
   out_5199872580074790941[350] = 0;
   out_5199872580074790941[351] = 1.0;
   out_5199872580074790941[352] = 0;
   out_5199872580074790941[353] = 0;
   out_5199872580074790941[354] = 0;
   out_5199872580074790941[355] = 0;
   out_5199872580074790941[356] = 0;
   out_5199872580074790941[357] = 0;
   out_5199872580074790941[358] = 0;
   out_5199872580074790941[359] = 0;
   out_5199872580074790941[360] = 0;
   out_5199872580074790941[361] = 0;
   out_5199872580074790941[362] = 0;
   out_5199872580074790941[363] = 0;
   out_5199872580074790941[364] = 0;
   out_5199872580074790941[365] = 0;
   out_5199872580074790941[366] = 0;
   out_5199872580074790941[367] = 0;
   out_5199872580074790941[368] = 0;
   out_5199872580074790941[369] = 0;
   out_5199872580074790941[370] = 0;
   out_5199872580074790941[371] = 0;
   out_5199872580074790941[372] = 0;
   out_5199872580074790941[373] = 1.0;
   out_5199872580074790941[374] = 0;
   out_5199872580074790941[375] = 0;
   out_5199872580074790941[376] = 0;
   out_5199872580074790941[377] = 0;
   out_5199872580074790941[378] = 0;
   out_5199872580074790941[379] = 0;
   out_5199872580074790941[380] = 0;
   out_5199872580074790941[381] = 0;
   out_5199872580074790941[382] = 0;
   out_5199872580074790941[383] = 0;
   out_5199872580074790941[384] = 0;
   out_5199872580074790941[385] = 0;
   out_5199872580074790941[386] = 0;
   out_5199872580074790941[387] = 0;
   out_5199872580074790941[388] = 0;
   out_5199872580074790941[389] = 0;
   out_5199872580074790941[390] = 0;
   out_5199872580074790941[391] = 0;
   out_5199872580074790941[392] = 0;
   out_5199872580074790941[393] = 0;
   out_5199872580074790941[394] = 0;
   out_5199872580074790941[395] = 1.0;
   out_5199872580074790941[396] = 0;
   out_5199872580074790941[397] = 0;
   out_5199872580074790941[398] = 0;
   out_5199872580074790941[399] = 0;
   out_5199872580074790941[400] = 0;
   out_5199872580074790941[401] = 0;
   out_5199872580074790941[402] = 0;
   out_5199872580074790941[403] = 0;
   out_5199872580074790941[404] = 0;
   out_5199872580074790941[405] = 0;
   out_5199872580074790941[406] = 0;
   out_5199872580074790941[407] = 0;
   out_5199872580074790941[408] = 0;
   out_5199872580074790941[409] = 0;
   out_5199872580074790941[410] = 0;
   out_5199872580074790941[411] = 0;
   out_5199872580074790941[412] = 0;
   out_5199872580074790941[413] = 0;
   out_5199872580074790941[414] = 0;
   out_5199872580074790941[415] = 0;
   out_5199872580074790941[416] = 0;
   out_5199872580074790941[417] = 1.0;
   out_5199872580074790941[418] = 0;
   out_5199872580074790941[419] = 0;
   out_5199872580074790941[420] = 0;
   out_5199872580074790941[421] = 0;
   out_5199872580074790941[422] = 0;
   out_5199872580074790941[423] = 0;
   out_5199872580074790941[424] = 0;
   out_5199872580074790941[425] = 0;
   out_5199872580074790941[426] = 0;
   out_5199872580074790941[427] = 0;
   out_5199872580074790941[428] = 0;
   out_5199872580074790941[429] = 0;
   out_5199872580074790941[430] = 0;
   out_5199872580074790941[431] = 0;
   out_5199872580074790941[432] = 0;
   out_5199872580074790941[433] = 0;
   out_5199872580074790941[434] = 0;
   out_5199872580074790941[435] = 0;
   out_5199872580074790941[436] = 0;
   out_5199872580074790941[437] = 0;
   out_5199872580074790941[438] = 0;
   out_5199872580074790941[439] = 1.0;
   out_5199872580074790941[440] = 0;
   out_5199872580074790941[441] = 0;
   out_5199872580074790941[442] = 0;
   out_5199872580074790941[443] = 0;
   out_5199872580074790941[444] = 0;
   out_5199872580074790941[445] = 0;
   out_5199872580074790941[446] = 0;
   out_5199872580074790941[447] = 0;
   out_5199872580074790941[448] = 0;
   out_5199872580074790941[449] = 0;
   out_5199872580074790941[450] = 0;
   out_5199872580074790941[451] = 0;
   out_5199872580074790941[452] = 0;
   out_5199872580074790941[453] = 0;
   out_5199872580074790941[454] = 0;
   out_5199872580074790941[455] = 0;
   out_5199872580074790941[456] = 0;
   out_5199872580074790941[457] = 0;
   out_5199872580074790941[458] = 0;
   out_5199872580074790941[459] = 0;
   out_5199872580074790941[460] = 0;
   out_5199872580074790941[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_600262745402749110) {
   out_600262745402749110[0] = dt*state[7] + state[0];
   out_600262745402749110[1] = dt*state[8] + state[1];
   out_600262745402749110[2] = dt*state[9] + state[2];
   out_600262745402749110[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_600262745402749110[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_600262745402749110[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_600262745402749110[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_600262745402749110[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_600262745402749110[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_600262745402749110[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_600262745402749110[10] = state[10];
   out_600262745402749110[11] = state[11];
   out_600262745402749110[12] = state[12];
   out_600262745402749110[13] = state[13];
   out_600262745402749110[14] = state[14];
   out_600262745402749110[15] = state[15];
   out_600262745402749110[16] = state[16];
   out_600262745402749110[17] = state[17];
   out_600262745402749110[18] = state[18];
   out_600262745402749110[19] = state[19];
   out_600262745402749110[20] = state[20];
   out_600262745402749110[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5123365299883911278) {
   out_5123365299883911278[0] = 1;
   out_5123365299883911278[1] = 0;
   out_5123365299883911278[2] = 0;
   out_5123365299883911278[3] = 0;
   out_5123365299883911278[4] = 0;
   out_5123365299883911278[5] = 0;
   out_5123365299883911278[6] = dt;
   out_5123365299883911278[7] = 0;
   out_5123365299883911278[8] = 0;
   out_5123365299883911278[9] = 0;
   out_5123365299883911278[10] = 0;
   out_5123365299883911278[11] = 0;
   out_5123365299883911278[12] = 0;
   out_5123365299883911278[13] = 0;
   out_5123365299883911278[14] = 0;
   out_5123365299883911278[15] = 0;
   out_5123365299883911278[16] = 0;
   out_5123365299883911278[17] = 0;
   out_5123365299883911278[18] = 0;
   out_5123365299883911278[19] = 0;
   out_5123365299883911278[20] = 0;
   out_5123365299883911278[21] = 0;
   out_5123365299883911278[22] = 1;
   out_5123365299883911278[23] = 0;
   out_5123365299883911278[24] = 0;
   out_5123365299883911278[25] = 0;
   out_5123365299883911278[26] = 0;
   out_5123365299883911278[27] = 0;
   out_5123365299883911278[28] = dt;
   out_5123365299883911278[29] = 0;
   out_5123365299883911278[30] = 0;
   out_5123365299883911278[31] = 0;
   out_5123365299883911278[32] = 0;
   out_5123365299883911278[33] = 0;
   out_5123365299883911278[34] = 0;
   out_5123365299883911278[35] = 0;
   out_5123365299883911278[36] = 0;
   out_5123365299883911278[37] = 0;
   out_5123365299883911278[38] = 0;
   out_5123365299883911278[39] = 0;
   out_5123365299883911278[40] = 0;
   out_5123365299883911278[41] = 0;
   out_5123365299883911278[42] = 0;
   out_5123365299883911278[43] = 0;
   out_5123365299883911278[44] = 1;
   out_5123365299883911278[45] = 0;
   out_5123365299883911278[46] = 0;
   out_5123365299883911278[47] = 0;
   out_5123365299883911278[48] = 0;
   out_5123365299883911278[49] = 0;
   out_5123365299883911278[50] = dt;
   out_5123365299883911278[51] = 0;
   out_5123365299883911278[52] = 0;
   out_5123365299883911278[53] = 0;
   out_5123365299883911278[54] = 0;
   out_5123365299883911278[55] = 0;
   out_5123365299883911278[56] = 0;
   out_5123365299883911278[57] = 0;
   out_5123365299883911278[58] = 0;
   out_5123365299883911278[59] = 0;
   out_5123365299883911278[60] = 0;
   out_5123365299883911278[61] = 0;
   out_5123365299883911278[62] = 0;
   out_5123365299883911278[63] = 0;
   out_5123365299883911278[64] = 0;
   out_5123365299883911278[65] = 0;
   out_5123365299883911278[66] = 1;
   out_5123365299883911278[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5123365299883911278[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5123365299883911278[69] = 0;
   out_5123365299883911278[70] = 0;
   out_5123365299883911278[71] = 0;
   out_5123365299883911278[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5123365299883911278[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5123365299883911278[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5123365299883911278[75] = 0;
   out_5123365299883911278[76] = 0;
   out_5123365299883911278[77] = 0;
   out_5123365299883911278[78] = 0;
   out_5123365299883911278[79] = 0;
   out_5123365299883911278[80] = 0;
   out_5123365299883911278[81] = 0;
   out_5123365299883911278[82] = 0;
   out_5123365299883911278[83] = 0;
   out_5123365299883911278[84] = 0;
   out_5123365299883911278[85] = 0;
   out_5123365299883911278[86] = 0;
   out_5123365299883911278[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5123365299883911278[88] = 1;
   out_5123365299883911278[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5123365299883911278[90] = 0;
   out_5123365299883911278[91] = 0;
   out_5123365299883911278[92] = 0;
   out_5123365299883911278[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5123365299883911278[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5123365299883911278[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5123365299883911278[96] = 0;
   out_5123365299883911278[97] = 0;
   out_5123365299883911278[98] = 0;
   out_5123365299883911278[99] = 0;
   out_5123365299883911278[100] = 0;
   out_5123365299883911278[101] = 0;
   out_5123365299883911278[102] = 0;
   out_5123365299883911278[103] = 0;
   out_5123365299883911278[104] = 0;
   out_5123365299883911278[105] = 0;
   out_5123365299883911278[106] = 0;
   out_5123365299883911278[107] = 0;
   out_5123365299883911278[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5123365299883911278[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5123365299883911278[110] = 1;
   out_5123365299883911278[111] = 0;
   out_5123365299883911278[112] = 0;
   out_5123365299883911278[113] = 0;
   out_5123365299883911278[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5123365299883911278[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5123365299883911278[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5123365299883911278[117] = 0;
   out_5123365299883911278[118] = 0;
   out_5123365299883911278[119] = 0;
   out_5123365299883911278[120] = 0;
   out_5123365299883911278[121] = 0;
   out_5123365299883911278[122] = 0;
   out_5123365299883911278[123] = 0;
   out_5123365299883911278[124] = 0;
   out_5123365299883911278[125] = 0;
   out_5123365299883911278[126] = 0;
   out_5123365299883911278[127] = 0;
   out_5123365299883911278[128] = 0;
   out_5123365299883911278[129] = 0;
   out_5123365299883911278[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5123365299883911278[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5123365299883911278[132] = 1;
   out_5123365299883911278[133] = 0;
   out_5123365299883911278[134] = 0;
   out_5123365299883911278[135] = 0;
   out_5123365299883911278[136] = 0;
   out_5123365299883911278[137] = 0;
   out_5123365299883911278[138] = 0;
   out_5123365299883911278[139] = 0;
   out_5123365299883911278[140] = 0;
   out_5123365299883911278[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5123365299883911278[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5123365299883911278[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5123365299883911278[144] = 0;
   out_5123365299883911278[145] = 0;
   out_5123365299883911278[146] = 0;
   out_5123365299883911278[147] = 0;
   out_5123365299883911278[148] = 0;
   out_5123365299883911278[149] = 0;
   out_5123365299883911278[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5123365299883911278[151] = 0;
   out_5123365299883911278[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5123365299883911278[153] = 0;
   out_5123365299883911278[154] = 1;
   out_5123365299883911278[155] = 0;
   out_5123365299883911278[156] = 0;
   out_5123365299883911278[157] = 0;
   out_5123365299883911278[158] = 0;
   out_5123365299883911278[159] = 0;
   out_5123365299883911278[160] = 0;
   out_5123365299883911278[161] = 0;
   out_5123365299883911278[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5123365299883911278[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5123365299883911278[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5123365299883911278[165] = 0;
   out_5123365299883911278[166] = 0;
   out_5123365299883911278[167] = 0;
   out_5123365299883911278[168] = 0;
   out_5123365299883911278[169] = 0;
   out_5123365299883911278[170] = 0;
   out_5123365299883911278[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5123365299883911278[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5123365299883911278[173] = 0;
   out_5123365299883911278[174] = 0;
   out_5123365299883911278[175] = 0;
   out_5123365299883911278[176] = 1;
   out_5123365299883911278[177] = 0;
   out_5123365299883911278[178] = 0;
   out_5123365299883911278[179] = 0;
   out_5123365299883911278[180] = 0;
   out_5123365299883911278[181] = 0;
   out_5123365299883911278[182] = 0;
   out_5123365299883911278[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5123365299883911278[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5123365299883911278[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5123365299883911278[186] = 0;
   out_5123365299883911278[187] = 0;
   out_5123365299883911278[188] = 0;
   out_5123365299883911278[189] = 0;
   out_5123365299883911278[190] = 0;
   out_5123365299883911278[191] = 0;
   out_5123365299883911278[192] = 0;
   out_5123365299883911278[193] = 0;
   out_5123365299883911278[194] = 0;
   out_5123365299883911278[195] = 0;
   out_5123365299883911278[196] = 0;
   out_5123365299883911278[197] = 0;
   out_5123365299883911278[198] = 1;
   out_5123365299883911278[199] = 0;
   out_5123365299883911278[200] = 0;
   out_5123365299883911278[201] = 0;
   out_5123365299883911278[202] = 0;
   out_5123365299883911278[203] = 0;
   out_5123365299883911278[204] = 0;
   out_5123365299883911278[205] = 0;
   out_5123365299883911278[206] = 0;
   out_5123365299883911278[207] = 0;
   out_5123365299883911278[208] = 0;
   out_5123365299883911278[209] = 0;
   out_5123365299883911278[210] = 0;
   out_5123365299883911278[211] = 0;
   out_5123365299883911278[212] = 0;
   out_5123365299883911278[213] = 0;
   out_5123365299883911278[214] = 0;
   out_5123365299883911278[215] = 0;
   out_5123365299883911278[216] = 0;
   out_5123365299883911278[217] = 0;
   out_5123365299883911278[218] = 0;
   out_5123365299883911278[219] = 0;
   out_5123365299883911278[220] = 1;
   out_5123365299883911278[221] = 0;
   out_5123365299883911278[222] = 0;
   out_5123365299883911278[223] = 0;
   out_5123365299883911278[224] = 0;
   out_5123365299883911278[225] = 0;
   out_5123365299883911278[226] = 0;
   out_5123365299883911278[227] = 0;
   out_5123365299883911278[228] = 0;
   out_5123365299883911278[229] = 0;
   out_5123365299883911278[230] = 0;
   out_5123365299883911278[231] = 0;
   out_5123365299883911278[232] = 0;
   out_5123365299883911278[233] = 0;
   out_5123365299883911278[234] = 0;
   out_5123365299883911278[235] = 0;
   out_5123365299883911278[236] = 0;
   out_5123365299883911278[237] = 0;
   out_5123365299883911278[238] = 0;
   out_5123365299883911278[239] = 0;
   out_5123365299883911278[240] = 0;
   out_5123365299883911278[241] = 0;
   out_5123365299883911278[242] = 1;
   out_5123365299883911278[243] = 0;
   out_5123365299883911278[244] = 0;
   out_5123365299883911278[245] = 0;
   out_5123365299883911278[246] = 0;
   out_5123365299883911278[247] = 0;
   out_5123365299883911278[248] = 0;
   out_5123365299883911278[249] = 0;
   out_5123365299883911278[250] = 0;
   out_5123365299883911278[251] = 0;
   out_5123365299883911278[252] = 0;
   out_5123365299883911278[253] = 0;
   out_5123365299883911278[254] = 0;
   out_5123365299883911278[255] = 0;
   out_5123365299883911278[256] = 0;
   out_5123365299883911278[257] = 0;
   out_5123365299883911278[258] = 0;
   out_5123365299883911278[259] = 0;
   out_5123365299883911278[260] = 0;
   out_5123365299883911278[261] = 0;
   out_5123365299883911278[262] = 0;
   out_5123365299883911278[263] = 0;
   out_5123365299883911278[264] = 1;
   out_5123365299883911278[265] = 0;
   out_5123365299883911278[266] = 0;
   out_5123365299883911278[267] = 0;
   out_5123365299883911278[268] = 0;
   out_5123365299883911278[269] = 0;
   out_5123365299883911278[270] = 0;
   out_5123365299883911278[271] = 0;
   out_5123365299883911278[272] = 0;
   out_5123365299883911278[273] = 0;
   out_5123365299883911278[274] = 0;
   out_5123365299883911278[275] = 0;
   out_5123365299883911278[276] = 0;
   out_5123365299883911278[277] = 0;
   out_5123365299883911278[278] = 0;
   out_5123365299883911278[279] = 0;
   out_5123365299883911278[280] = 0;
   out_5123365299883911278[281] = 0;
   out_5123365299883911278[282] = 0;
   out_5123365299883911278[283] = 0;
   out_5123365299883911278[284] = 0;
   out_5123365299883911278[285] = 0;
   out_5123365299883911278[286] = 1;
   out_5123365299883911278[287] = 0;
   out_5123365299883911278[288] = 0;
   out_5123365299883911278[289] = 0;
   out_5123365299883911278[290] = 0;
   out_5123365299883911278[291] = 0;
   out_5123365299883911278[292] = 0;
   out_5123365299883911278[293] = 0;
   out_5123365299883911278[294] = 0;
   out_5123365299883911278[295] = 0;
   out_5123365299883911278[296] = 0;
   out_5123365299883911278[297] = 0;
   out_5123365299883911278[298] = 0;
   out_5123365299883911278[299] = 0;
   out_5123365299883911278[300] = 0;
   out_5123365299883911278[301] = 0;
   out_5123365299883911278[302] = 0;
   out_5123365299883911278[303] = 0;
   out_5123365299883911278[304] = 0;
   out_5123365299883911278[305] = 0;
   out_5123365299883911278[306] = 0;
   out_5123365299883911278[307] = 0;
   out_5123365299883911278[308] = 1;
   out_5123365299883911278[309] = 0;
   out_5123365299883911278[310] = 0;
   out_5123365299883911278[311] = 0;
   out_5123365299883911278[312] = 0;
   out_5123365299883911278[313] = 0;
   out_5123365299883911278[314] = 0;
   out_5123365299883911278[315] = 0;
   out_5123365299883911278[316] = 0;
   out_5123365299883911278[317] = 0;
   out_5123365299883911278[318] = 0;
   out_5123365299883911278[319] = 0;
   out_5123365299883911278[320] = 0;
   out_5123365299883911278[321] = 0;
   out_5123365299883911278[322] = 0;
   out_5123365299883911278[323] = 0;
   out_5123365299883911278[324] = 0;
   out_5123365299883911278[325] = 0;
   out_5123365299883911278[326] = 0;
   out_5123365299883911278[327] = 0;
   out_5123365299883911278[328] = 0;
   out_5123365299883911278[329] = 0;
   out_5123365299883911278[330] = 1;
   out_5123365299883911278[331] = 0;
   out_5123365299883911278[332] = 0;
   out_5123365299883911278[333] = 0;
   out_5123365299883911278[334] = 0;
   out_5123365299883911278[335] = 0;
   out_5123365299883911278[336] = 0;
   out_5123365299883911278[337] = 0;
   out_5123365299883911278[338] = 0;
   out_5123365299883911278[339] = 0;
   out_5123365299883911278[340] = 0;
   out_5123365299883911278[341] = 0;
   out_5123365299883911278[342] = 0;
   out_5123365299883911278[343] = 0;
   out_5123365299883911278[344] = 0;
   out_5123365299883911278[345] = 0;
   out_5123365299883911278[346] = 0;
   out_5123365299883911278[347] = 0;
   out_5123365299883911278[348] = 0;
   out_5123365299883911278[349] = 0;
   out_5123365299883911278[350] = 0;
   out_5123365299883911278[351] = 0;
   out_5123365299883911278[352] = 1;
   out_5123365299883911278[353] = 0;
   out_5123365299883911278[354] = 0;
   out_5123365299883911278[355] = 0;
   out_5123365299883911278[356] = 0;
   out_5123365299883911278[357] = 0;
   out_5123365299883911278[358] = 0;
   out_5123365299883911278[359] = 0;
   out_5123365299883911278[360] = 0;
   out_5123365299883911278[361] = 0;
   out_5123365299883911278[362] = 0;
   out_5123365299883911278[363] = 0;
   out_5123365299883911278[364] = 0;
   out_5123365299883911278[365] = 0;
   out_5123365299883911278[366] = 0;
   out_5123365299883911278[367] = 0;
   out_5123365299883911278[368] = 0;
   out_5123365299883911278[369] = 0;
   out_5123365299883911278[370] = 0;
   out_5123365299883911278[371] = 0;
   out_5123365299883911278[372] = 0;
   out_5123365299883911278[373] = 0;
   out_5123365299883911278[374] = 1;
   out_5123365299883911278[375] = 0;
   out_5123365299883911278[376] = 0;
   out_5123365299883911278[377] = 0;
   out_5123365299883911278[378] = 0;
   out_5123365299883911278[379] = 0;
   out_5123365299883911278[380] = 0;
   out_5123365299883911278[381] = 0;
   out_5123365299883911278[382] = 0;
   out_5123365299883911278[383] = 0;
   out_5123365299883911278[384] = 0;
   out_5123365299883911278[385] = 0;
   out_5123365299883911278[386] = 0;
   out_5123365299883911278[387] = 0;
   out_5123365299883911278[388] = 0;
   out_5123365299883911278[389] = 0;
   out_5123365299883911278[390] = 0;
   out_5123365299883911278[391] = 0;
   out_5123365299883911278[392] = 0;
   out_5123365299883911278[393] = 0;
   out_5123365299883911278[394] = 0;
   out_5123365299883911278[395] = 0;
   out_5123365299883911278[396] = 1;
   out_5123365299883911278[397] = 0;
   out_5123365299883911278[398] = 0;
   out_5123365299883911278[399] = 0;
   out_5123365299883911278[400] = 0;
   out_5123365299883911278[401] = 0;
   out_5123365299883911278[402] = 0;
   out_5123365299883911278[403] = 0;
   out_5123365299883911278[404] = 0;
   out_5123365299883911278[405] = 0;
   out_5123365299883911278[406] = 0;
   out_5123365299883911278[407] = 0;
   out_5123365299883911278[408] = 0;
   out_5123365299883911278[409] = 0;
   out_5123365299883911278[410] = 0;
   out_5123365299883911278[411] = 0;
   out_5123365299883911278[412] = 0;
   out_5123365299883911278[413] = 0;
   out_5123365299883911278[414] = 0;
   out_5123365299883911278[415] = 0;
   out_5123365299883911278[416] = 0;
   out_5123365299883911278[417] = 0;
   out_5123365299883911278[418] = 1;
   out_5123365299883911278[419] = 0;
   out_5123365299883911278[420] = 0;
   out_5123365299883911278[421] = 0;
   out_5123365299883911278[422] = 0;
   out_5123365299883911278[423] = 0;
   out_5123365299883911278[424] = 0;
   out_5123365299883911278[425] = 0;
   out_5123365299883911278[426] = 0;
   out_5123365299883911278[427] = 0;
   out_5123365299883911278[428] = 0;
   out_5123365299883911278[429] = 0;
   out_5123365299883911278[430] = 0;
   out_5123365299883911278[431] = 0;
   out_5123365299883911278[432] = 0;
   out_5123365299883911278[433] = 0;
   out_5123365299883911278[434] = 0;
   out_5123365299883911278[435] = 0;
   out_5123365299883911278[436] = 0;
   out_5123365299883911278[437] = 0;
   out_5123365299883911278[438] = 0;
   out_5123365299883911278[439] = 0;
   out_5123365299883911278[440] = 1;
}
void h_4(double *state, double *unused, double *out_4387115819840874865) {
   out_4387115819840874865[0] = state[10] + state[13];
   out_4387115819840874865[1] = state[11] + state[14];
   out_4387115819840874865[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_9026498161771385970) {
   out_9026498161771385970[0] = 0;
   out_9026498161771385970[1] = 0;
   out_9026498161771385970[2] = 0;
   out_9026498161771385970[3] = 0;
   out_9026498161771385970[4] = 0;
   out_9026498161771385970[5] = 0;
   out_9026498161771385970[6] = 0;
   out_9026498161771385970[7] = 0;
   out_9026498161771385970[8] = 0;
   out_9026498161771385970[9] = 0;
   out_9026498161771385970[10] = 1;
   out_9026498161771385970[11] = 0;
   out_9026498161771385970[12] = 0;
   out_9026498161771385970[13] = 1;
   out_9026498161771385970[14] = 0;
   out_9026498161771385970[15] = 0;
   out_9026498161771385970[16] = 0;
   out_9026498161771385970[17] = 0;
   out_9026498161771385970[18] = 0;
   out_9026498161771385970[19] = 0;
   out_9026498161771385970[20] = 0;
   out_9026498161771385970[21] = 0;
   out_9026498161771385970[22] = 0;
   out_9026498161771385970[23] = 0;
   out_9026498161771385970[24] = 0;
   out_9026498161771385970[25] = 0;
   out_9026498161771385970[26] = 0;
   out_9026498161771385970[27] = 0;
   out_9026498161771385970[28] = 0;
   out_9026498161771385970[29] = 0;
   out_9026498161771385970[30] = 0;
   out_9026498161771385970[31] = 0;
   out_9026498161771385970[32] = 0;
   out_9026498161771385970[33] = 1;
   out_9026498161771385970[34] = 0;
   out_9026498161771385970[35] = 0;
   out_9026498161771385970[36] = 1;
   out_9026498161771385970[37] = 0;
   out_9026498161771385970[38] = 0;
   out_9026498161771385970[39] = 0;
   out_9026498161771385970[40] = 0;
   out_9026498161771385970[41] = 0;
   out_9026498161771385970[42] = 0;
   out_9026498161771385970[43] = 0;
   out_9026498161771385970[44] = 0;
   out_9026498161771385970[45] = 0;
   out_9026498161771385970[46] = 0;
   out_9026498161771385970[47] = 0;
   out_9026498161771385970[48] = 0;
   out_9026498161771385970[49] = 0;
   out_9026498161771385970[50] = 0;
   out_9026498161771385970[51] = 0;
   out_9026498161771385970[52] = 0;
   out_9026498161771385970[53] = 0;
   out_9026498161771385970[54] = 0;
   out_9026498161771385970[55] = 0;
   out_9026498161771385970[56] = 1;
   out_9026498161771385970[57] = 0;
   out_9026498161771385970[58] = 0;
   out_9026498161771385970[59] = 1;
   out_9026498161771385970[60] = 0;
   out_9026498161771385970[61] = 0;
   out_9026498161771385970[62] = 0;
   out_9026498161771385970[63] = 0;
   out_9026498161771385970[64] = 0;
   out_9026498161771385970[65] = 0;
}
void h_9(double *state, double *unused, double *out_428366524812042299) {
   out_428366524812042299[0] = state[10];
   out_428366524812042299[1] = state[11];
   out_428366524812042299[2] = state[12];
}
void H_9(double *state, double *unused, double *out_9179056265308575001) {
   out_9179056265308575001[0] = 0;
   out_9179056265308575001[1] = 0;
   out_9179056265308575001[2] = 0;
   out_9179056265308575001[3] = 0;
   out_9179056265308575001[4] = 0;
   out_9179056265308575001[5] = 0;
   out_9179056265308575001[6] = 0;
   out_9179056265308575001[7] = 0;
   out_9179056265308575001[8] = 0;
   out_9179056265308575001[9] = 0;
   out_9179056265308575001[10] = 1;
   out_9179056265308575001[11] = 0;
   out_9179056265308575001[12] = 0;
   out_9179056265308575001[13] = 0;
   out_9179056265308575001[14] = 0;
   out_9179056265308575001[15] = 0;
   out_9179056265308575001[16] = 0;
   out_9179056265308575001[17] = 0;
   out_9179056265308575001[18] = 0;
   out_9179056265308575001[19] = 0;
   out_9179056265308575001[20] = 0;
   out_9179056265308575001[21] = 0;
   out_9179056265308575001[22] = 0;
   out_9179056265308575001[23] = 0;
   out_9179056265308575001[24] = 0;
   out_9179056265308575001[25] = 0;
   out_9179056265308575001[26] = 0;
   out_9179056265308575001[27] = 0;
   out_9179056265308575001[28] = 0;
   out_9179056265308575001[29] = 0;
   out_9179056265308575001[30] = 0;
   out_9179056265308575001[31] = 0;
   out_9179056265308575001[32] = 0;
   out_9179056265308575001[33] = 1;
   out_9179056265308575001[34] = 0;
   out_9179056265308575001[35] = 0;
   out_9179056265308575001[36] = 0;
   out_9179056265308575001[37] = 0;
   out_9179056265308575001[38] = 0;
   out_9179056265308575001[39] = 0;
   out_9179056265308575001[40] = 0;
   out_9179056265308575001[41] = 0;
   out_9179056265308575001[42] = 0;
   out_9179056265308575001[43] = 0;
   out_9179056265308575001[44] = 0;
   out_9179056265308575001[45] = 0;
   out_9179056265308575001[46] = 0;
   out_9179056265308575001[47] = 0;
   out_9179056265308575001[48] = 0;
   out_9179056265308575001[49] = 0;
   out_9179056265308575001[50] = 0;
   out_9179056265308575001[51] = 0;
   out_9179056265308575001[52] = 0;
   out_9179056265308575001[53] = 0;
   out_9179056265308575001[54] = 0;
   out_9179056265308575001[55] = 0;
   out_9179056265308575001[56] = 1;
   out_9179056265308575001[57] = 0;
   out_9179056265308575001[58] = 0;
   out_9179056265308575001[59] = 0;
   out_9179056265308575001[60] = 0;
   out_9179056265308575001[61] = 0;
   out_9179056265308575001[62] = 0;
   out_9179056265308575001[63] = 0;
   out_9179056265308575001[64] = 0;
   out_9179056265308575001[65] = 0;
}
void h_10(double *state, double *unused, double *out_132396485967147845) {
   out_132396485967147845[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_132396485967147845[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_132396485967147845[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8768831841606438093) {
   out_8768831841606438093[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8768831841606438093[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8768831841606438093[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8768831841606438093[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8768831841606438093[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8768831841606438093[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8768831841606438093[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8768831841606438093[7] = 0;
   out_8768831841606438093[8] = 0;
   out_8768831841606438093[9] = 0;
   out_8768831841606438093[10] = 0;
   out_8768831841606438093[11] = 0;
   out_8768831841606438093[12] = 0;
   out_8768831841606438093[13] = 0;
   out_8768831841606438093[14] = 0;
   out_8768831841606438093[15] = 0;
   out_8768831841606438093[16] = 1;
   out_8768831841606438093[17] = 0;
   out_8768831841606438093[18] = 0;
   out_8768831841606438093[19] = 1;
   out_8768831841606438093[20] = 0;
   out_8768831841606438093[21] = 0;
   out_8768831841606438093[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8768831841606438093[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8768831841606438093[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8768831841606438093[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8768831841606438093[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8768831841606438093[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8768831841606438093[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8768831841606438093[29] = 0;
   out_8768831841606438093[30] = 0;
   out_8768831841606438093[31] = 0;
   out_8768831841606438093[32] = 0;
   out_8768831841606438093[33] = 0;
   out_8768831841606438093[34] = 0;
   out_8768831841606438093[35] = 0;
   out_8768831841606438093[36] = 0;
   out_8768831841606438093[37] = 0;
   out_8768831841606438093[38] = 0;
   out_8768831841606438093[39] = 1;
   out_8768831841606438093[40] = 0;
   out_8768831841606438093[41] = 0;
   out_8768831841606438093[42] = 1;
   out_8768831841606438093[43] = 0;
   out_8768831841606438093[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8768831841606438093[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8768831841606438093[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8768831841606438093[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8768831841606438093[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8768831841606438093[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8768831841606438093[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8768831841606438093[51] = 0;
   out_8768831841606438093[52] = 0;
   out_8768831841606438093[53] = 0;
   out_8768831841606438093[54] = 0;
   out_8768831841606438093[55] = 0;
   out_8768831841606438093[56] = 0;
   out_8768831841606438093[57] = 0;
   out_8768831841606438093[58] = 0;
   out_8768831841606438093[59] = 0;
   out_8768831841606438093[60] = 0;
   out_8768831841606438093[61] = 0;
   out_8768831841606438093[62] = 1;
   out_8768831841606438093[63] = 0;
   out_8768831841606438093[64] = 0;
   out_8768831841606438093[65] = 1;
}
void h_12(double *state, double *unused, double *out_4720485780193781256) {
   out_4720485780193781256[0] = state[0];
   out_4720485780193781256[1] = state[1];
   out_4720485780193781256[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4400789503906203851) {
   out_4400789503906203851[0] = 1;
   out_4400789503906203851[1] = 0;
   out_4400789503906203851[2] = 0;
   out_4400789503906203851[3] = 0;
   out_4400789503906203851[4] = 0;
   out_4400789503906203851[5] = 0;
   out_4400789503906203851[6] = 0;
   out_4400789503906203851[7] = 0;
   out_4400789503906203851[8] = 0;
   out_4400789503906203851[9] = 0;
   out_4400789503906203851[10] = 0;
   out_4400789503906203851[11] = 0;
   out_4400789503906203851[12] = 0;
   out_4400789503906203851[13] = 0;
   out_4400789503906203851[14] = 0;
   out_4400789503906203851[15] = 0;
   out_4400789503906203851[16] = 0;
   out_4400789503906203851[17] = 0;
   out_4400789503906203851[18] = 0;
   out_4400789503906203851[19] = 0;
   out_4400789503906203851[20] = 0;
   out_4400789503906203851[21] = 0;
   out_4400789503906203851[22] = 0;
   out_4400789503906203851[23] = 1;
   out_4400789503906203851[24] = 0;
   out_4400789503906203851[25] = 0;
   out_4400789503906203851[26] = 0;
   out_4400789503906203851[27] = 0;
   out_4400789503906203851[28] = 0;
   out_4400789503906203851[29] = 0;
   out_4400789503906203851[30] = 0;
   out_4400789503906203851[31] = 0;
   out_4400789503906203851[32] = 0;
   out_4400789503906203851[33] = 0;
   out_4400789503906203851[34] = 0;
   out_4400789503906203851[35] = 0;
   out_4400789503906203851[36] = 0;
   out_4400789503906203851[37] = 0;
   out_4400789503906203851[38] = 0;
   out_4400789503906203851[39] = 0;
   out_4400789503906203851[40] = 0;
   out_4400789503906203851[41] = 0;
   out_4400789503906203851[42] = 0;
   out_4400789503906203851[43] = 0;
   out_4400789503906203851[44] = 0;
   out_4400789503906203851[45] = 0;
   out_4400789503906203851[46] = 1;
   out_4400789503906203851[47] = 0;
   out_4400789503906203851[48] = 0;
   out_4400789503906203851[49] = 0;
   out_4400789503906203851[50] = 0;
   out_4400789503906203851[51] = 0;
   out_4400789503906203851[52] = 0;
   out_4400789503906203851[53] = 0;
   out_4400789503906203851[54] = 0;
   out_4400789503906203851[55] = 0;
   out_4400789503906203851[56] = 0;
   out_4400789503906203851[57] = 0;
   out_4400789503906203851[58] = 0;
   out_4400789503906203851[59] = 0;
   out_4400789503906203851[60] = 0;
   out_4400789503906203851[61] = 0;
   out_4400789503906203851[62] = 0;
   out_4400789503906203851[63] = 0;
   out_4400789503906203851[64] = 0;
   out_4400789503906203851[65] = 0;
}
void h_35(double *state, double *unused, double *out_6828849116840194903) {
   out_6828849116840194903[0] = state[7];
   out_6828849116840194903[1] = state[8];
   out_6828849116840194903[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1655226471581190142) {
   out_1655226471581190142[0] = 0;
   out_1655226471581190142[1] = 0;
   out_1655226471581190142[2] = 0;
   out_1655226471581190142[3] = 0;
   out_1655226471581190142[4] = 0;
   out_1655226471581190142[5] = 0;
   out_1655226471581190142[6] = 0;
   out_1655226471581190142[7] = 1;
   out_1655226471581190142[8] = 0;
   out_1655226471581190142[9] = 0;
   out_1655226471581190142[10] = 0;
   out_1655226471581190142[11] = 0;
   out_1655226471581190142[12] = 0;
   out_1655226471581190142[13] = 0;
   out_1655226471581190142[14] = 0;
   out_1655226471581190142[15] = 0;
   out_1655226471581190142[16] = 0;
   out_1655226471581190142[17] = 0;
   out_1655226471581190142[18] = 0;
   out_1655226471581190142[19] = 0;
   out_1655226471581190142[20] = 0;
   out_1655226471581190142[21] = 0;
   out_1655226471581190142[22] = 0;
   out_1655226471581190142[23] = 0;
   out_1655226471581190142[24] = 0;
   out_1655226471581190142[25] = 0;
   out_1655226471581190142[26] = 0;
   out_1655226471581190142[27] = 0;
   out_1655226471581190142[28] = 0;
   out_1655226471581190142[29] = 0;
   out_1655226471581190142[30] = 1;
   out_1655226471581190142[31] = 0;
   out_1655226471581190142[32] = 0;
   out_1655226471581190142[33] = 0;
   out_1655226471581190142[34] = 0;
   out_1655226471581190142[35] = 0;
   out_1655226471581190142[36] = 0;
   out_1655226471581190142[37] = 0;
   out_1655226471581190142[38] = 0;
   out_1655226471581190142[39] = 0;
   out_1655226471581190142[40] = 0;
   out_1655226471581190142[41] = 0;
   out_1655226471581190142[42] = 0;
   out_1655226471581190142[43] = 0;
   out_1655226471581190142[44] = 0;
   out_1655226471581190142[45] = 0;
   out_1655226471581190142[46] = 0;
   out_1655226471581190142[47] = 0;
   out_1655226471581190142[48] = 0;
   out_1655226471581190142[49] = 0;
   out_1655226471581190142[50] = 0;
   out_1655226471581190142[51] = 0;
   out_1655226471581190142[52] = 0;
   out_1655226471581190142[53] = 1;
   out_1655226471581190142[54] = 0;
   out_1655226471581190142[55] = 0;
   out_1655226471581190142[56] = 0;
   out_1655226471581190142[57] = 0;
   out_1655226471581190142[58] = 0;
   out_1655226471581190142[59] = 0;
   out_1655226471581190142[60] = 0;
   out_1655226471581190142[61] = 0;
   out_1655226471581190142[62] = 0;
   out_1655226471581190142[63] = 0;
   out_1655226471581190142[64] = 0;
   out_1655226471581190142[65] = 0;
}
void h_32(double *state, double *unused, double *out_808476979379320652) {
   out_808476979379320652[0] = state[3];
   out_808476979379320652[1] = state[4];
   out_808476979379320652[2] = state[5];
   out_808476979379320652[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5996231247314297030) {
   out_5996231247314297030[0] = 0;
   out_5996231247314297030[1] = 0;
   out_5996231247314297030[2] = 0;
   out_5996231247314297030[3] = 1;
   out_5996231247314297030[4] = 0;
   out_5996231247314297030[5] = 0;
   out_5996231247314297030[6] = 0;
   out_5996231247314297030[7] = 0;
   out_5996231247314297030[8] = 0;
   out_5996231247314297030[9] = 0;
   out_5996231247314297030[10] = 0;
   out_5996231247314297030[11] = 0;
   out_5996231247314297030[12] = 0;
   out_5996231247314297030[13] = 0;
   out_5996231247314297030[14] = 0;
   out_5996231247314297030[15] = 0;
   out_5996231247314297030[16] = 0;
   out_5996231247314297030[17] = 0;
   out_5996231247314297030[18] = 0;
   out_5996231247314297030[19] = 0;
   out_5996231247314297030[20] = 0;
   out_5996231247314297030[21] = 0;
   out_5996231247314297030[22] = 0;
   out_5996231247314297030[23] = 0;
   out_5996231247314297030[24] = 0;
   out_5996231247314297030[25] = 0;
   out_5996231247314297030[26] = 1;
   out_5996231247314297030[27] = 0;
   out_5996231247314297030[28] = 0;
   out_5996231247314297030[29] = 0;
   out_5996231247314297030[30] = 0;
   out_5996231247314297030[31] = 0;
   out_5996231247314297030[32] = 0;
   out_5996231247314297030[33] = 0;
   out_5996231247314297030[34] = 0;
   out_5996231247314297030[35] = 0;
   out_5996231247314297030[36] = 0;
   out_5996231247314297030[37] = 0;
   out_5996231247314297030[38] = 0;
   out_5996231247314297030[39] = 0;
   out_5996231247314297030[40] = 0;
   out_5996231247314297030[41] = 0;
   out_5996231247314297030[42] = 0;
   out_5996231247314297030[43] = 0;
   out_5996231247314297030[44] = 0;
   out_5996231247314297030[45] = 0;
   out_5996231247314297030[46] = 0;
   out_5996231247314297030[47] = 0;
   out_5996231247314297030[48] = 0;
   out_5996231247314297030[49] = 1;
   out_5996231247314297030[50] = 0;
   out_5996231247314297030[51] = 0;
   out_5996231247314297030[52] = 0;
   out_5996231247314297030[53] = 0;
   out_5996231247314297030[54] = 0;
   out_5996231247314297030[55] = 0;
   out_5996231247314297030[56] = 0;
   out_5996231247314297030[57] = 0;
   out_5996231247314297030[58] = 0;
   out_5996231247314297030[59] = 0;
   out_5996231247314297030[60] = 0;
   out_5996231247314297030[61] = 0;
   out_5996231247314297030[62] = 0;
   out_5996231247314297030[63] = 0;
   out_5996231247314297030[64] = 0;
   out_5996231247314297030[65] = 0;
   out_5996231247314297030[66] = 0;
   out_5996231247314297030[67] = 0;
   out_5996231247314297030[68] = 0;
   out_5996231247314297030[69] = 0;
   out_5996231247314297030[70] = 0;
   out_5996231247314297030[71] = 0;
   out_5996231247314297030[72] = 1;
   out_5996231247314297030[73] = 0;
   out_5996231247314297030[74] = 0;
   out_5996231247314297030[75] = 0;
   out_5996231247314297030[76] = 0;
   out_5996231247314297030[77] = 0;
   out_5996231247314297030[78] = 0;
   out_5996231247314297030[79] = 0;
   out_5996231247314297030[80] = 0;
   out_5996231247314297030[81] = 0;
   out_5996231247314297030[82] = 0;
   out_5996231247314297030[83] = 0;
   out_5996231247314297030[84] = 0;
   out_5996231247314297030[85] = 0;
   out_5996231247314297030[86] = 0;
   out_5996231247314297030[87] = 0;
}
void h_13(double *state, double *unused, double *out_6513017278277276756) {
   out_6513017278277276756[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6513017278277276756[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6513017278277276756[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4863404896131074) {
   out_4863404896131074[0] = 0;
   out_4863404896131074[1] = 0;
   out_4863404896131074[2] = 0;
   out_4863404896131074[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4863404896131074[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4863404896131074[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4863404896131074[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4863404896131074[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4863404896131074[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4863404896131074[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4863404896131074[10] = 0;
   out_4863404896131074[11] = 0;
   out_4863404896131074[12] = 0;
   out_4863404896131074[13] = 0;
   out_4863404896131074[14] = 0;
   out_4863404896131074[15] = 0;
   out_4863404896131074[16] = 0;
   out_4863404896131074[17] = 0;
   out_4863404896131074[18] = 0;
   out_4863404896131074[19] = 0;
   out_4863404896131074[20] = 0;
   out_4863404896131074[21] = 0;
   out_4863404896131074[22] = 0;
   out_4863404896131074[23] = 0;
   out_4863404896131074[24] = 0;
   out_4863404896131074[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4863404896131074[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4863404896131074[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4863404896131074[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4863404896131074[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4863404896131074[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4863404896131074[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4863404896131074[32] = 0;
   out_4863404896131074[33] = 0;
   out_4863404896131074[34] = 0;
   out_4863404896131074[35] = 0;
   out_4863404896131074[36] = 0;
   out_4863404896131074[37] = 0;
   out_4863404896131074[38] = 0;
   out_4863404896131074[39] = 0;
   out_4863404896131074[40] = 0;
   out_4863404896131074[41] = 0;
   out_4863404896131074[42] = 0;
   out_4863404896131074[43] = 0;
   out_4863404896131074[44] = 0;
   out_4863404896131074[45] = 0;
   out_4863404896131074[46] = 0;
   out_4863404896131074[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4863404896131074[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4863404896131074[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4863404896131074[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4863404896131074[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4863404896131074[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4863404896131074[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4863404896131074[54] = 0;
   out_4863404896131074[55] = 0;
   out_4863404896131074[56] = 0;
   out_4863404896131074[57] = 0;
   out_4863404896131074[58] = 0;
   out_4863404896131074[59] = 0;
   out_4863404896131074[60] = 0;
   out_4863404896131074[61] = 0;
   out_4863404896131074[62] = 0;
   out_4863404896131074[63] = 0;
   out_4863404896131074[64] = 0;
   out_4863404896131074[65] = 0;
}
void h_14(double *state, double *unused, double *out_428366524812042299) {
   out_428366524812042299[0] = state[10];
   out_428366524812042299[1] = state[11];
   out_428366524812042299[2] = state[12];
}
void H_14(double *state, double *unused, double *out_9179056265308575001) {
   out_9179056265308575001[0] = 0;
   out_9179056265308575001[1] = 0;
   out_9179056265308575001[2] = 0;
   out_9179056265308575001[3] = 0;
   out_9179056265308575001[4] = 0;
   out_9179056265308575001[5] = 0;
   out_9179056265308575001[6] = 0;
   out_9179056265308575001[7] = 0;
   out_9179056265308575001[8] = 0;
   out_9179056265308575001[9] = 0;
   out_9179056265308575001[10] = 1;
   out_9179056265308575001[11] = 0;
   out_9179056265308575001[12] = 0;
   out_9179056265308575001[13] = 0;
   out_9179056265308575001[14] = 0;
   out_9179056265308575001[15] = 0;
   out_9179056265308575001[16] = 0;
   out_9179056265308575001[17] = 0;
   out_9179056265308575001[18] = 0;
   out_9179056265308575001[19] = 0;
   out_9179056265308575001[20] = 0;
   out_9179056265308575001[21] = 0;
   out_9179056265308575001[22] = 0;
   out_9179056265308575001[23] = 0;
   out_9179056265308575001[24] = 0;
   out_9179056265308575001[25] = 0;
   out_9179056265308575001[26] = 0;
   out_9179056265308575001[27] = 0;
   out_9179056265308575001[28] = 0;
   out_9179056265308575001[29] = 0;
   out_9179056265308575001[30] = 0;
   out_9179056265308575001[31] = 0;
   out_9179056265308575001[32] = 0;
   out_9179056265308575001[33] = 1;
   out_9179056265308575001[34] = 0;
   out_9179056265308575001[35] = 0;
   out_9179056265308575001[36] = 0;
   out_9179056265308575001[37] = 0;
   out_9179056265308575001[38] = 0;
   out_9179056265308575001[39] = 0;
   out_9179056265308575001[40] = 0;
   out_9179056265308575001[41] = 0;
   out_9179056265308575001[42] = 0;
   out_9179056265308575001[43] = 0;
   out_9179056265308575001[44] = 0;
   out_9179056265308575001[45] = 0;
   out_9179056265308575001[46] = 0;
   out_9179056265308575001[47] = 0;
   out_9179056265308575001[48] = 0;
   out_9179056265308575001[49] = 0;
   out_9179056265308575001[50] = 0;
   out_9179056265308575001[51] = 0;
   out_9179056265308575001[52] = 0;
   out_9179056265308575001[53] = 0;
   out_9179056265308575001[54] = 0;
   out_9179056265308575001[55] = 0;
   out_9179056265308575001[56] = 1;
   out_9179056265308575001[57] = 0;
   out_9179056265308575001[58] = 0;
   out_9179056265308575001[59] = 0;
   out_9179056265308575001[60] = 0;
   out_9179056265308575001[61] = 0;
   out_9179056265308575001[62] = 0;
   out_9179056265308575001[63] = 0;
   out_9179056265308575001[64] = 0;
   out_9179056265308575001[65] = 0;
}
void h_33(double *state, double *unused, double *out_782504987709470049) {
   out_782504987709470049[0] = state[16];
   out_782504987709470049[1] = state[17];
   out_782504987709470049[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2903026849926700666) {
   out_2903026849926700666[0] = 0;
   out_2903026849926700666[1] = 0;
   out_2903026849926700666[2] = 0;
   out_2903026849926700666[3] = 0;
   out_2903026849926700666[4] = 0;
   out_2903026849926700666[5] = 0;
   out_2903026849926700666[6] = 0;
   out_2903026849926700666[7] = 0;
   out_2903026849926700666[8] = 0;
   out_2903026849926700666[9] = 0;
   out_2903026849926700666[10] = 0;
   out_2903026849926700666[11] = 0;
   out_2903026849926700666[12] = 0;
   out_2903026849926700666[13] = 0;
   out_2903026849926700666[14] = 0;
   out_2903026849926700666[15] = 0;
   out_2903026849926700666[16] = 1;
   out_2903026849926700666[17] = 0;
   out_2903026849926700666[18] = 0;
   out_2903026849926700666[19] = 0;
   out_2903026849926700666[20] = 0;
   out_2903026849926700666[21] = 0;
   out_2903026849926700666[22] = 0;
   out_2903026849926700666[23] = 0;
   out_2903026849926700666[24] = 0;
   out_2903026849926700666[25] = 0;
   out_2903026849926700666[26] = 0;
   out_2903026849926700666[27] = 0;
   out_2903026849926700666[28] = 0;
   out_2903026849926700666[29] = 0;
   out_2903026849926700666[30] = 0;
   out_2903026849926700666[31] = 0;
   out_2903026849926700666[32] = 0;
   out_2903026849926700666[33] = 0;
   out_2903026849926700666[34] = 0;
   out_2903026849926700666[35] = 0;
   out_2903026849926700666[36] = 0;
   out_2903026849926700666[37] = 0;
   out_2903026849926700666[38] = 0;
   out_2903026849926700666[39] = 1;
   out_2903026849926700666[40] = 0;
   out_2903026849926700666[41] = 0;
   out_2903026849926700666[42] = 0;
   out_2903026849926700666[43] = 0;
   out_2903026849926700666[44] = 0;
   out_2903026849926700666[45] = 0;
   out_2903026849926700666[46] = 0;
   out_2903026849926700666[47] = 0;
   out_2903026849926700666[48] = 0;
   out_2903026849926700666[49] = 0;
   out_2903026849926700666[50] = 0;
   out_2903026849926700666[51] = 0;
   out_2903026849926700666[52] = 0;
   out_2903026849926700666[53] = 0;
   out_2903026849926700666[54] = 0;
   out_2903026849926700666[55] = 0;
   out_2903026849926700666[56] = 0;
   out_2903026849926700666[57] = 0;
   out_2903026849926700666[58] = 0;
   out_2903026849926700666[59] = 0;
   out_2903026849926700666[60] = 0;
   out_2903026849926700666[61] = 0;
   out_2903026849926700666[62] = 1;
   out_2903026849926700666[63] = 0;
   out_2903026849926700666[64] = 0;
   out_2903026849926700666[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6723270188322560730) {
  H(in_vec, out_6723270188322560730);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4473607639701987721) {
  err_fun(nom_x, delta_x, out_4473607639701987721);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4669519886941048090) {
  inv_err_fun(nom_x, true_x, out_4669519886941048090);
}
void live_H_mod_fun(double *state, double *out_5199872580074790941) {
  H_mod_fun(state, out_5199872580074790941);
}
void live_f_fun(double *state, double dt, double *out_600262745402749110) {
  f_fun(state,  dt, out_600262745402749110);
}
void live_F_fun(double *state, double dt, double *out_5123365299883911278) {
  F_fun(state,  dt, out_5123365299883911278);
}
void live_h_4(double *state, double *unused, double *out_4387115819840874865) {
  h_4(state, unused, out_4387115819840874865);
}
void live_H_4(double *state, double *unused, double *out_9026498161771385970) {
  H_4(state, unused, out_9026498161771385970);
}
void live_h_9(double *state, double *unused, double *out_428366524812042299) {
  h_9(state, unused, out_428366524812042299);
}
void live_H_9(double *state, double *unused, double *out_9179056265308575001) {
  H_9(state, unused, out_9179056265308575001);
}
void live_h_10(double *state, double *unused, double *out_132396485967147845) {
  h_10(state, unused, out_132396485967147845);
}
void live_H_10(double *state, double *unused, double *out_8768831841606438093) {
  H_10(state, unused, out_8768831841606438093);
}
void live_h_12(double *state, double *unused, double *out_4720485780193781256) {
  h_12(state, unused, out_4720485780193781256);
}
void live_H_12(double *state, double *unused, double *out_4400789503906203851) {
  H_12(state, unused, out_4400789503906203851);
}
void live_h_35(double *state, double *unused, double *out_6828849116840194903) {
  h_35(state, unused, out_6828849116840194903);
}
void live_H_35(double *state, double *unused, double *out_1655226471581190142) {
  H_35(state, unused, out_1655226471581190142);
}
void live_h_32(double *state, double *unused, double *out_808476979379320652) {
  h_32(state, unused, out_808476979379320652);
}
void live_H_32(double *state, double *unused, double *out_5996231247314297030) {
  H_32(state, unused, out_5996231247314297030);
}
void live_h_13(double *state, double *unused, double *out_6513017278277276756) {
  h_13(state, unused, out_6513017278277276756);
}
void live_H_13(double *state, double *unused, double *out_4863404896131074) {
  H_13(state, unused, out_4863404896131074);
}
void live_h_14(double *state, double *unused, double *out_428366524812042299) {
  h_14(state, unused, out_428366524812042299);
}
void live_H_14(double *state, double *unused, double *out_9179056265308575001) {
  H_14(state, unused, out_9179056265308575001);
}
void live_h_33(double *state, double *unused, double *out_782504987709470049) {
  h_33(state, unused, out_782504987709470049);
}
void live_H_33(double *state, double *unused, double *out_2903026849926700666) {
  H_33(state, unused, out_2903026849926700666);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
