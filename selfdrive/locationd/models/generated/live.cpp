#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_214500349649226956) {
   out_214500349649226956[0] = 0;
   out_214500349649226956[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_214500349649226956[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_214500349649226956[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_214500349649226956[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_214500349649226956[5] = -sin(in_vec[1]);
   out_214500349649226956[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_214500349649226956[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_214500349649226956[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_214500349649226956[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_214500349649226956[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_214500349649226956[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_214500349649226956[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_214500349649226956[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_214500349649226956[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_214500349649226956[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_214500349649226956[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_214500349649226956[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4930751168403226085) {
   out_4930751168403226085[0] = delta_x[0] + nom_x[0];
   out_4930751168403226085[1] = delta_x[1] + nom_x[1];
   out_4930751168403226085[2] = delta_x[2] + nom_x[2];
   out_4930751168403226085[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4930751168403226085[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4930751168403226085[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4930751168403226085[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4930751168403226085[7] = delta_x[6] + nom_x[7];
   out_4930751168403226085[8] = delta_x[7] + nom_x[8];
   out_4930751168403226085[9] = delta_x[8] + nom_x[9];
   out_4930751168403226085[10] = delta_x[9] + nom_x[10];
   out_4930751168403226085[11] = delta_x[10] + nom_x[11];
   out_4930751168403226085[12] = delta_x[11] + nom_x[12];
   out_4930751168403226085[13] = delta_x[12] + nom_x[13];
   out_4930751168403226085[14] = delta_x[13] + nom_x[14];
   out_4930751168403226085[15] = delta_x[14] + nom_x[15];
   out_4930751168403226085[16] = delta_x[15] + nom_x[16];
   out_4930751168403226085[17] = delta_x[16] + nom_x[17];
   out_4930751168403226085[18] = delta_x[17] + nom_x[18];
   out_4930751168403226085[19] = delta_x[18] + nom_x[19];
   out_4930751168403226085[20] = delta_x[19] + nom_x[20];
   out_4930751168403226085[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5324820040472701178) {
   out_5324820040472701178[0] = -nom_x[0] + true_x[0];
   out_5324820040472701178[1] = -nom_x[1] + true_x[1];
   out_5324820040472701178[2] = -nom_x[2] + true_x[2];
   out_5324820040472701178[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5324820040472701178[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5324820040472701178[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5324820040472701178[6] = -nom_x[7] + true_x[7];
   out_5324820040472701178[7] = -nom_x[8] + true_x[8];
   out_5324820040472701178[8] = -nom_x[9] + true_x[9];
   out_5324820040472701178[9] = -nom_x[10] + true_x[10];
   out_5324820040472701178[10] = -nom_x[11] + true_x[11];
   out_5324820040472701178[11] = -nom_x[12] + true_x[12];
   out_5324820040472701178[12] = -nom_x[13] + true_x[13];
   out_5324820040472701178[13] = -nom_x[14] + true_x[14];
   out_5324820040472701178[14] = -nom_x[15] + true_x[15];
   out_5324820040472701178[15] = -nom_x[16] + true_x[16];
   out_5324820040472701178[16] = -nom_x[17] + true_x[17];
   out_5324820040472701178[17] = -nom_x[18] + true_x[18];
   out_5324820040472701178[18] = -nom_x[19] + true_x[19];
   out_5324820040472701178[19] = -nom_x[20] + true_x[20];
   out_5324820040472701178[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5188937138529325432) {
   out_5188937138529325432[0] = 1.0;
   out_5188937138529325432[1] = 0;
   out_5188937138529325432[2] = 0;
   out_5188937138529325432[3] = 0;
   out_5188937138529325432[4] = 0;
   out_5188937138529325432[5] = 0;
   out_5188937138529325432[6] = 0;
   out_5188937138529325432[7] = 0;
   out_5188937138529325432[8] = 0;
   out_5188937138529325432[9] = 0;
   out_5188937138529325432[10] = 0;
   out_5188937138529325432[11] = 0;
   out_5188937138529325432[12] = 0;
   out_5188937138529325432[13] = 0;
   out_5188937138529325432[14] = 0;
   out_5188937138529325432[15] = 0;
   out_5188937138529325432[16] = 0;
   out_5188937138529325432[17] = 0;
   out_5188937138529325432[18] = 0;
   out_5188937138529325432[19] = 0;
   out_5188937138529325432[20] = 0;
   out_5188937138529325432[21] = 0;
   out_5188937138529325432[22] = 1.0;
   out_5188937138529325432[23] = 0;
   out_5188937138529325432[24] = 0;
   out_5188937138529325432[25] = 0;
   out_5188937138529325432[26] = 0;
   out_5188937138529325432[27] = 0;
   out_5188937138529325432[28] = 0;
   out_5188937138529325432[29] = 0;
   out_5188937138529325432[30] = 0;
   out_5188937138529325432[31] = 0;
   out_5188937138529325432[32] = 0;
   out_5188937138529325432[33] = 0;
   out_5188937138529325432[34] = 0;
   out_5188937138529325432[35] = 0;
   out_5188937138529325432[36] = 0;
   out_5188937138529325432[37] = 0;
   out_5188937138529325432[38] = 0;
   out_5188937138529325432[39] = 0;
   out_5188937138529325432[40] = 0;
   out_5188937138529325432[41] = 0;
   out_5188937138529325432[42] = 0;
   out_5188937138529325432[43] = 0;
   out_5188937138529325432[44] = 1.0;
   out_5188937138529325432[45] = 0;
   out_5188937138529325432[46] = 0;
   out_5188937138529325432[47] = 0;
   out_5188937138529325432[48] = 0;
   out_5188937138529325432[49] = 0;
   out_5188937138529325432[50] = 0;
   out_5188937138529325432[51] = 0;
   out_5188937138529325432[52] = 0;
   out_5188937138529325432[53] = 0;
   out_5188937138529325432[54] = 0;
   out_5188937138529325432[55] = 0;
   out_5188937138529325432[56] = 0;
   out_5188937138529325432[57] = 0;
   out_5188937138529325432[58] = 0;
   out_5188937138529325432[59] = 0;
   out_5188937138529325432[60] = 0;
   out_5188937138529325432[61] = 0;
   out_5188937138529325432[62] = 0;
   out_5188937138529325432[63] = 0;
   out_5188937138529325432[64] = 0;
   out_5188937138529325432[65] = 0;
   out_5188937138529325432[66] = -0.5*state[4];
   out_5188937138529325432[67] = -0.5*state[5];
   out_5188937138529325432[68] = -0.5*state[6];
   out_5188937138529325432[69] = 0;
   out_5188937138529325432[70] = 0;
   out_5188937138529325432[71] = 0;
   out_5188937138529325432[72] = 0;
   out_5188937138529325432[73] = 0;
   out_5188937138529325432[74] = 0;
   out_5188937138529325432[75] = 0;
   out_5188937138529325432[76] = 0;
   out_5188937138529325432[77] = 0;
   out_5188937138529325432[78] = 0;
   out_5188937138529325432[79] = 0;
   out_5188937138529325432[80] = 0;
   out_5188937138529325432[81] = 0;
   out_5188937138529325432[82] = 0;
   out_5188937138529325432[83] = 0;
   out_5188937138529325432[84] = 0;
   out_5188937138529325432[85] = 0;
   out_5188937138529325432[86] = 0;
   out_5188937138529325432[87] = 0.5*state[3];
   out_5188937138529325432[88] = 0.5*state[6];
   out_5188937138529325432[89] = -0.5*state[5];
   out_5188937138529325432[90] = 0;
   out_5188937138529325432[91] = 0;
   out_5188937138529325432[92] = 0;
   out_5188937138529325432[93] = 0;
   out_5188937138529325432[94] = 0;
   out_5188937138529325432[95] = 0;
   out_5188937138529325432[96] = 0;
   out_5188937138529325432[97] = 0;
   out_5188937138529325432[98] = 0;
   out_5188937138529325432[99] = 0;
   out_5188937138529325432[100] = 0;
   out_5188937138529325432[101] = 0;
   out_5188937138529325432[102] = 0;
   out_5188937138529325432[103] = 0;
   out_5188937138529325432[104] = 0;
   out_5188937138529325432[105] = 0;
   out_5188937138529325432[106] = 0;
   out_5188937138529325432[107] = 0;
   out_5188937138529325432[108] = -0.5*state[6];
   out_5188937138529325432[109] = 0.5*state[3];
   out_5188937138529325432[110] = 0.5*state[4];
   out_5188937138529325432[111] = 0;
   out_5188937138529325432[112] = 0;
   out_5188937138529325432[113] = 0;
   out_5188937138529325432[114] = 0;
   out_5188937138529325432[115] = 0;
   out_5188937138529325432[116] = 0;
   out_5188937138529325432[117] = 0;
   out_5188937138529325432[118] = 0;
   out_5188937138529325432[119] = 0;
   out_5188937138529325432[120] = 0;
   out_5188937138529325432[121] = 0;
   out_5188937138529325432[122] = 0;
   out_5188937138529325432[123] = 0;
   out_5188937138529325432[124] = 0;
   out_5188937138529325432[125] = 0;
   out_5188937138529325432[126] = 0;
   out_5188937138529325432[127] = 0;
   out_5188937138529325432[128] = 0;
   out_5188937138529325432[129] = 0.5*state[5];
   out_5188937138529325432[130] = -0.5*state[4];
   out_5188937138529325432[131] = 0.5*state[3];
   out_5188937138529325432[132] = 0;
   out_5188937138529325432[133] = 0;
   out_5188937138529325432[134] = 0;
   out_5188937138529325432[135] = 0;
   out_5188937138529325432[136] = 0;
   out_5188937138529325432[137] = 0;
   out_5188937138529325432[138] = 0;
   out_5188937138529325432[139] = 0;
   out_5188937138529325432[140] = 0;
   out_5188937138529325432[141] = 0;
   out_5188937138529325432[142] = 0;
   out_5188937138529325432[143] = 0;
   out_5188937138529325432[144] = 0;
   out_5188937138529325432[145] = 0;
   out_5188937138529325432[146] = 0;
   out_5188937138529325432[147] = 0;
   out_5188937138529325432[148] = 0;
   out_5188937138529325432[149] = 0;
   out_5188937138529325432[150] = 0;
   out_5188937138529325432[151] = 0;
   out_5188937138529325432[152] = 0;
   out_5188937138529325432[153] = 1.0;
   out_5188937138529325432[154] = 0;
   out_5188937138529325432[155] = 0;
   out_5188937138529325432[156] = 0;
   out_5188937138529325432[157] = 0;
   out_5188937138529325432[158] = 0;
   out_5188937138529325432[159] = 0;
   out_5188937138529325432[160] = 0;
   out_5188937138529325432[161] = 0;
   out_5188937138529325432[162] = 0;
   out_5188937138529325432[163] = 0;
   out_5188937138529325432[164] = 0;
   out_5188937138529325432[165] = 0;
   out_5188937138529325432[166] = 0;
   out_5188937138529325432[167] = 0;
   out_5188937138529325432[168] = 0;
   out_5188937138529325432[169] = 0;
   out_5188937138529325432[170] = 0;
   out_5188937138529325432[171] = 0;
   out_5188937138529325432[172] = 0;
   out_5188937138529325432[173] = 0;
   out_5188937138529325432[174] = 0;
   out_5188937138529325432[175] = 1.0;
   out_5188937138529325432[176] = 0;
   out_5188937138529325432[177] = 0;
   out_5188937138529325432[178] = 0;
   out_5188937138529325432[179] = 0;
   out_5188937138529325432[180] = 0;
   out_5188937138529325432[181] = 0;
   out_5188937138529325432[182] = 0;
   out_5188937138529325432[183] = 0;
   out_5188937138529325432[184] = 0;
   out_5188937138529325432[185] = 0;
   out_5188937138529325432[186] = 0;
   out_5188937138529325432[187] = 0;
   out_5188937138529325432[188] = 0;
   out_5188937138529325432[189] = 0;
   out_5188937138529325432[190] = 0;
   out_5188937138529325432[191] = 0;
   out_5188937138529325432[192] = 0;
   out_5188937138529325432[193] = 0;
   out_5188937138529325432[194] = 0;
   out_5188937138529325432[195] = 0;
   out_5188937138529325432[196] = 0;
   out_5188937138529325432[197] = 1.0;
   out_5188937138529325432[198] = 0;
   out_5188937138529325432[199] = 0;
   out_5188937138529325432[200] = 0;
   out_5188937138529325432[201] = 0;
   out_5188937138529325432[202] = 0;
   out_5188937138529325432[203] = 0;
   out_5188937138529325432[204] = 0;
   out_5188937138529325432[205] = 0;
   out_5188937138529325432[206] = 0;
   out_5188937138529325432[207] = 0;
   out_5188937138529325432[208] = 0;
   out_5188937138529325432[209] = 0;
   out_5188937138529325432[210] = 0;
   out_5188937138529325432[211] = 0;
   out_5188937138529325432[212] = 0;
   out_5188937138529325432[213] = 0;
   out_5188937138529325432[214] = 0;
   out_5188937138529325432[215] = 0;
   out_5188937138529325432[216] = 0;
   out_5188937138529325432[217] = 0;
   out_5188937138529325432[218] = 0;
   out_5188937138529325432[219] = 1.0;
   out_5188937138529325432[220] = 0;
   out_5188937138529325432[221] = 0;
   out_5188937138529325432[222] = 0;
   out_5188937138529325432[223] = 0;
   out_5188937138529325432[224] = 0;
   out_5188937138529325432[225] = 0;
   out_5188937138529325432[226] = 0;
   out_5188937138529325432[227] = 0;
   out_5188937138529325432[228] = 0;
   out_5188937138529325432[229] = 0;
   out_5188937138529325432[230] = 0;
   out_5188937138529325432[231] = 0;
   out_5188937138529325432[232] = 0;
   out_5188937138529325432[233] = 0;
   out_5188937138529325432[234] = 0;
   out_5188937138529325432[235] = 0;
   out_5188937138529325432[236] = 0;
   out_5188937138529325432[237] = 0;
   out_5188937138529325432[238] = 0;
   out_5188937138529325432[239] = 0;
   out_5188937138529325432[240] = 0;
   out_5188937138529325432[241] = 1.0;
   out_5188937138529325432[242] = 0;
   out_5188937138529325432[243] = 0;
   out_5188937138529325432[244] = 0;
   out_5188937138529325432[245] = 0;
   out_5188937138529325432[246] = 0;
   out_5188937138529325432[247] = 0;
   out_5188937138529325432[248] = 0;
   out_5188937138529325432[249] = 0;
   out_5188937138529325432[250] = 0;
   out_5188937138529325432[251] = 0;
   out_5188937138529325432[252] = 0;
   out_5188937138529325432[253] = 0;
   out_5188937138529325432[254] = 0;
   out_5188937138529325432[255] = 0;
   out_5188937138529325432[256] = 0;
   out_5188937138529325432[257] = 0;
   out_5188937138529325432[258] = 0;
   out_5188937138529325432[259] = 0;
   out_5188937138529325432[260] = 0;
   out_5188937138529325432[261] = 0;
   out_5188937138529325432[262] = 0;
   out_5188937138529325432[263] = 1.0;
   out_5188937138529325432[264] = 0;
   out_5188937138529325432[265] = 0;
   out_5188937138529325432[266] = 0;
   out_5188937138529325432[267] = 0;
   out_5188937138529325432[268] = 0;
   out_5188937138529325432[269] = 0;
   out_5188937138529325432[270] = 0;
   out_5188937138529325432[271] = 0;
   out_5188937138529325432[272] = 0;
   out_5188937138529325432[273] = 0;
   out_5188937138529325432[274] = 0;
   out_5188937138529325432[275] = 0;
   out_5188937138529325432[276] = 0;
   out_5188937138529325432[277] = 0;
   out_5188937138529325432[278] = 0;
   out_5188937138529325432[279] = 0;
   out_5188937138529325432[280] = 0;
   out_5188937138529325432[281] = 0;
   out_5188937138529325432[282] = 0;
   out_5188937138529325432[283] = 0;
   out_5188937138529325432[284] = 0;
   out_5188937138529325432[285] = 1.0;
   out_5188937138529325432[286] = 0;
   out_5188937138529325432[287] = 0;
   out_5188937138529325432[288] = 0;
   out_5188937138529325432[289] = 0;
   out_5188937138529325432[290] = 0;
   out_5188937138529325432[291] = 0;
   out_5188937138529325432[292] = 0;
   out_5188937138529325432[293] = 0;
   out_5188937138529325432[294] = 0;
   out_5188937138529325432[295] = 0;
   out_5188937138529325432[296] = 0;
   out_5188937138529325432[297] = 0;
   out_5188937138529325432[298] = 0;
   out_5188937138529325432[299] = 0;
   out_5188937138529325432[300] = 0;
   out_5188937138529325432[301] = 0;
   out_5188937138529325432[302] = 0;
   out_5188937138529325432[303] = 0;
   out_5188937138529325432[304] = 0;
   out_5188937138529325432[305] = 0;
   out_5188937138529325432[306] = 0;
   out_5188937138529325432[307] = 1.0;
   out_5188937138529325432[308] = 0;
   out_5188937138529325432[309] = 0;
   out_5188937138529325432[310] = 0;
   out_5188937138529325432[311] = 0;
   out_5188937138529325432[312] = 0;
   out_5188937138529325432[313] = 0;
   out_5188937138529325432[314] = 0;
   out_5188937138529325432[315] = 0;
   out_5188937138529325432[316] = 0;
   out_5188937138529325432[317] = 0;
   out_5188937138529325432[318] = 0;
   out_5188937138529325432[319] = 0;
   out_5188937138529325432[320] = 0;
   out_5188937138529325432[321] = 0;
   out_5188937138529325432[322] = 0;
   out_5188937138529325432[323] = 0;
   out_5188937138529325432[324] = 0;
   out_5188937138529325432[325] = 0;
   out_5188937138529325432[326] = 0;
   out_5188937138529325432[327] = 0;
   out_5188937138529325432[328] = 0;
   out_5188937138529325432[329] = 1.0;
   out_5188937138529325432[330] = 0;
   out_5188937138529325432[331] = 0;
   out_5188937138529325432[332] = 0;
   out_5188937138529325432[333] = 0;
   out_5188937138529325432[334] = 0;
   out_5188937138529325432[335] = 0;
   out_5188937138529325432[336] = 0;
   out_5188937138529325432[337] = 0;
   out_5188937138529325432[338] = 0;
   out_5188937138529325432[339] = 0;
   out_5188937138529325432[340] = 0;
   out_5188937138529325432[341] = 0;
   out_5188937138529325432[342] = 0;
   out_5188937138529325432[343] = 0;
   out_5188937138529325432[344] = 0;
   out_5188937138529325432[345] = 0;
   out_5188937138529325432[346] = 0;
   out_5188937138529325432[347] = 0;
   out_5188937138529325432[348] = 0;
   out_5188937138529325432[349] = 0;
   out_5188937138529325432[350] = 0;
   out_5188937138529325432[351] = 1.0;
   out_5188937138529325432[352] = 0;
   out_5188937138529325432[353] = 0;
   out_5188937138529325432[354] = 0;
   out_5188937138529325432[355] = 0;
   out_5188937138529325432[356] = 0;
   out_5188937138529325432[357] = 0;
   out_5188937138529325432[358] = 0;
   out_5188937138529325432[359] = 0;
   out_5188937138529325432[360] = 0;
   out_5188937138529325432[361] = 0;
   out_5188937138529325432[362] = 0;
   out_5188937138529325432[363] = 0;
   out_5188937138529325432[364] = 0;
   out_5188937138529325432[365] = 0;
   out_5188937138529325432[366] = 0;
   out_5188937138529325432[367] = 0;
   out_5188937138529325432[368] = 0;
   out_5188937138529325432[369] = 0;
   out_5188937138529325432[370] = 0;
   out_5188937138529325432[371] = 0;
   out_5188937138529325432[372] = 0;
   out_5188937138529325432[373] = 1.0;
   out_5188937138529325432[374] = 0;
   out_5188937138529325432[375] = 0;
   out_5188937138529325432[376] = 0;
   out_5188937138529325432[377] = 0;
   out_5188937138529325432[378] = 0;
   out_5188937138529325432[379] = 0;
   out_5188937138529325432[380] = 0;
   out_5188937138529325432[381] = 0;
   out_5188937138529325432[382] = 0;
   out_5188937138529325432[383] = 0;
   out_5188937138529325432[384] = 0;
   out_5188937138529325432[385] = 0;
   out_5188937138529325432[386] = 0;
   out_5188937138529325432[387] = 0;
   out_5188937138529325432[388] = 0;
   out_5188937138529325432[389] = 0;
   out_5188937138529325432[390] = 0;
   out_5188937138529325432[391] = 0;
   out_5188937138529325432[392] = 0;
   out_5188937138529325432[393] = 0;
   out_5188937138529325432[394] = 0;
   out_5188937138529325432[395] = 1.0;
   out_5188937138529325432[396] = 0;
   out_5188937138529325432[397] = 0;
   out_5188937138529325432[398] = 0;
   out_5188937138529325432[399] = 0;
   out_5188937138529325432[400] = 0;
   out_5188937138529325432[401] = 0;
   out_5188937138529325432[402] = 0;
   out_5188937138529325432[403] = 0;
   out_5188937138529325432[404] = 0;
   out_5188937138529325432[405] = 0;
   out_5188937138529325432[406] = 0;
   out_5188937138529325432[407] = 0;
   out_5188937138529325432[408] = 0;
   out_5188937138529325432[409] = 0;
   out_5188937138529325432[410] = 0;
   out_5188937138529325432[411] = 0;
   out_5188937138529325432[412] = 0;
   out_5188937138529325432[413] = 0;
   out_5188937138529325432[414] = 0;
   out_5188937138529325432[415] = 0;
   out_5188937138529325432[416] = 0;
   out_5188937138529325432[417] = 1.0;
   out_5188937138529325432[418] = 0;
   out_5188937138529325432[419] = 0;
   out_5188937138529325432[420] = 0;
   out_5188937138529325432[421] = 0;
   out_5188937138529325432[422] = 0;
   out_5188937138529325432[423] = 0;
   out_5188937138529325432[424] = 0;
   out_5188937138529325432[425] = 0;
   out_5188937138529325432[426] = 0;
   out_5188937138529325432[427] = 0;
   out_5188937138529325432[428] = 0;
   out_5188937138529325432[429] = 0;
   out_5188937138529325432[430] = 0;
   out_5188937138529325432[431] = 0;
   out_5188937138529325432[432] = 0;
   out_5188937138529325432[433] = 0;
   out_5188937138529325432[434] = 0;
   out_5188937138529325432[435] = 0;
   out_5188937138529325432[436] = 0;
   out_5188937138529325432[437] = 0;
   out_5188937138529325432[438] = 0;
   out_5188937138529325432[439] = 1.0;
   out_5188937138529325432[440] = 0;
   out_5188937138529325432[441] = 0;
   out_5188937138529325432[442] = 0;
   out_5188937138529325432[443] = 0;
   out_5188937138529325432[444] = 0;
   out_5188937138529325432[445] = 0;
   out_5188937138529325432[446] = 0;
   out_5188937138529325432[447] = 0;
   out_5188937138529325432[448] = 0;
   out_5188937138529325432[449] = 0;
   out_5188937138529325432[450] = 0;
   out_5188937138529325432[451] = 0;
   out_5188937138529325432[452] = 0;
   out_5188937138529325432[453] = 0;
   out_5188937138529325432[454] = 0;
   out_5188937138529325432[455] = 0;
   out_5188937138529325432[456] = 0;
   out_5188937138529325432[457] = 0;
   out_5188937138529325432[458] = 0;
   out_5188937138529325432[459] = 0;
   out_5188937138529325432[460] = 0;
   out_5188937138529325432[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7723766835351807537) {
   out_7723766835351807537[0] = dt*state[7] + state[0];
   out_7723766835351807537[1] = dt*state[8] + state[1];
   out_7723766835351807537[2] = dt*state[9] + state[2];
   out_7723766835351807537[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7723766835351807537[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7723766835351807537[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7723766835351807537[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7723766835351807537[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7723766835351807537[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7723766835351807537[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7723766835351807537[10] = state[10];
   out_7723766835351807537[11] = state[11];
   out_7723766835351807537[12] = state[12];
   out_7723766835351807537[13] = state[13];
   out_7723766835351807537[14] = state[14];
   out_7723766835351807537[15] = state[15];
   out_7723766835351807537[16] = state[16];
   out_7723766835351807537[17] = state[17];
   out_7723766835351807537[18] = state[18];
   out_7723766835351807537[19] = state[19];
   out_7723766835351807537[20] = state[20];
   out_7723766835351807537[21] = state[21];
}
void F_fun(double *state, double dt, double *out_9205111709488920692) {
   out_9205111709488920692[0] = 1;
   out_9205111709488920692[1] = 0;
   out_9205111709488920692[2] = 0;
   out_9205111709488920692[3] = 0;
   out_9205111709488920692[4] = 0;
   out_9205111709488920692[5] = 0;
   out_9205111709488920692[6] = dt;
   out_9205111709488920692[7] = 0;
   out_9205111709488920692[8] = 0;
   out_9205111709488920692[9] = 0;
   out_9205111709488920692[10] = 0;
   out_9205111709488920692[11] = 0;
   out_9205111709488920692[12] = 0;
   out_9205111709488920692[13] = 0;
   out_9205111709488920692[14] = 0;
   out_9205111709488920692[15] = 0;
   out_9205111709488920692[16] = 0;
   out_9205111709488920692[17] = 0;
   out_9205111709488920692[18] = 0;
   out_9205111709488920692[19] = 0;
   out_9205111709488920692[20] = 0;
   out_9205111709488920692[21] = 0;
   out_9205111709488920692[22] = 1;
   out_9205111709488920692[23] = 0;
   out_9205111709488920692[24] = 0;
   out_9205111709488920692[25] = 0;
   out_9205111709488920692[26] = 0;
   out_9205111709488920692[27] = 0;
   out_9205111709488920692[28] = dt;
   out_9205111709488920692[29] = 0;
   out_9205111709488920692[30] = 0;
   out_9205111709488920692[31] = 0;
   out_9205111709488920692[32] = 0;
   out_9205111709488920692[33] = 0;
   out_9205111709488920692[34] = 0;
   out_9205111709488920692[35] = 0;
   out_9205111709488920692[36] = 0;
   out_9205111709488920692[37] = 0;
   out_9205111709488920692[38] = 0;
   out_9205111709488920692[39] = 0;
   out_9205111709488920692[40] = 0;
   out_9205111709488920692[41] = 0;
   out_9205111709488920692[42] = 0;
   out_9205111709488920692[43] = 0;
   out_9205111709488920692[44] = 1;
   out_9205111709488920692[45] = 0;
   out_9205111709488920692[46] = 0;
   out_9205111709488920692[47] = 0;
   out_9205111709488920692[48] = 0;
   out_9205111709488920692[49] = 0;
   out_9205111709488920692[50] = dt;
   out_9205111709488920692[51] = 0;
   out_9205111709488920692[52] = 0;
   out_9205111709488920692[53] = 0;
   out_9205111709488920692[54] = 0;
   out_9205111709488920692[55] = 0;
   out_9205111709488920692[56] = 0;
   out_9205111709488920692[57] = 0;
   out_9205111709488920692[58] = 0;
   out_9205111709488920692[59] = 0;
   out_9205111709488920692[60] = 0;
   out_9205111709488920692[61] = 0;
   out_9205111709488920692[62] = 0;
   out_9205111709488920692[63] = 0;
   out_9205111709488920692[64] = 0;
   out_9205111709488920692[65] = 0;
   out_9205111709488920692[66] = 1;
   out_9205111709488920692[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9205111709488920692[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_9205111709488920692[69] = 0;
   out_9205111709488920692[70] = 0;
   out_9205111709488920692[71] = 0;
   out_9205111709488920692[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9205111709488920692[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9205111709488920692[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9205111709488920692[75] = 0;
   out_9205111709488920692[76] = 0;
   out_9205111709488920692[77] = 0;
   out_9205111709488920692[78] = 0;
   out_9205111709488920692[79] = 0;
   out_9205111709488920692[80] = 0;
   out_9205111709488920692[81] = 0;
   out_9205111709488920692[82] = 0;
   out_9205111709488920692[83] = 0;
   out_9205111709488920692[84] = 0;
   out_9205111709488920692[85] = 0;
   out_9205111709488920692[86] = 0;
   out_9205111709488920692[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9205111709488920692[88] = 1;
   out_9205111709488920692[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_9205111709488920692[90] = 0;
   out_9205111709488920692[91] = 0;
   out_9205111709488920692[92] = 0;
   out_9205111709488920692[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9205111709488920692[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9205111709488920692[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9205111709488920692[96] = 0;
   out_9205111709488920692[97] = 0;
   out_9205111709488920692[98] = 0;
   out_9205111709488920692[99] = 0;
   out_9205111709488920692[100] = 0;
   out_9205111709488920692[101] = 0;
   out_9205111709488920692[102] = 0;
   out_9205111709488920692[103] = 0;
   out_9205111709488920692[104] = 0;
   out_9205111709488920692[105] = 0;
   out_9205111709488920692[106] = 0;
   out_9205111709488920692[107] = 0;
   out_9205111709488920692[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_9205111709488920692[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_9205111709488920692[110] = 1;
   out_9205111709488920692[111] = 0;
   out_9205111709488920692[112] = 0;
   out_9205111709488920692[113] = 0;
   out_9205111709488920692[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9205111709488920692[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9205111709488920692[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9205111709488920692[117] = 0;
   out_9205111709488920692[118] = 0;
   out_9205111709488920692[119] = 0;
   out_9205111709488920692[120] = 0;
   out_9205111709488920692[121] = 0;
   out_9205111709488920692[122] = 0;
   out_9205111709488920692[123] = 0;
   out_9205111709488920692[124] = 0;
   out_9205111709488920692[125] = 0;
   out_9205111709488920692[126] = 0;
   out_9205111709488920692[127] = 0;
   out_9205111709488920692[128] = 0;
   out_9205111709488920692[129] = 0;
   out_9205111709488920692[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9205111709488920692[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_9205111709488920692[132] = 1;
   out_9205111709488920692[133] = 0;
   out_9205111709488920692[134] = 0;
   out_9205111709488920692[135] = 0;
   out_9205111709488920692[136] = 0;
   out_9205111709488920692[137] = 0;
   out_9205111709488920692[138] = 0;
   out_9205111709488920692[139] = 0;
   out_9205111709488920692[140] = 0;
   out_9205111709488920692[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9205111709488920692[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9205111709488920692[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9205111709488920692[144] = 0;
   out_9205111709488920692[145] = 0;
   out_9205111709488920692[146] = 0;
   out_9205111709488920692[147] = 0;
   out_9205111709488920692[148] = 0;
   out_9205111709488920692[149] = 0;
   out_9205111709488920692[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9205111709488920692[151] = 0;
   out_9205111709488920692[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_9205111709488920692[153] = 0;
   out_9205111709488920692[154] = 1;
   out_9205111709488920692[155] = 0;
   out_9205111709488920692[156] = 0;
   out_9205111709488920692[157] = 0;
   out_9205111709488920692[158] = 0;
   out_9205111709488920692[159] = 0;
   out_9205111709488920692[160] = 0;
   out_9205111709488920692[161] = 0;
   out_9205111709488920692[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9205111709488920692[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9205111709488920692[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9205111709488920692[165] = 0;
   out_9205111709488920692[166] = 0;
   out_9205111709488920692[167] = 0;
   out_9205111709488920692[168] = 0;
   out_9205111709488920692[169] = 0;
   out_9205111709488920692[170] = 0;
   out_9205111709488920692[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_9205111709488920692[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_9205111709488920692[173] = 0;
   out_9205111709488920692[174] = 0;
   out_9205111709488920692[175] = 0;
   out_9205111709488920692[176] = 1;
   out_9205111709488920692[177] = 0;
   out_9205111709488920692[178] = 0;
   out_9205111709488920692[179] = 0;
   out_9205111709488920692[180] = 0;
   out_9205111709488920692[181] = 0;
   out_9205111709488920692[182] = 0;
   out_9205111709488920692[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9205111709488920692[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9205111709488920692[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9205111709488920692[186] = 0;
   out_9205111709488920692[187] = 0;
   out_9205111709488920692[188] = 0;
   out_9205111709488920692[189] = 0;
   out_9205111709488920692[190] = 0;
   out_9205111709488920692[191] = 0;
   out_9205111709488920692[192] = 0;
   out_9205111709488920692[193] = 0;
   out_9205111709488920692[194] = 0;
   out_9205111709488920692[195] = 0;
   out_9205111709488920692[196] = 0;
   out_9205111709488920692[197] = 0;
   out_9205111709488920692[198] = 1;
   out_9205111709488920692[199] = 0;
   out_9205111709488920692[200] = 0;
   out_9205111709488920692[201] = 0;
   out_9205111709488920692[202] = 0;
   out_9205111709488920692[203] = 0;
   out_9205111709488920692[204] = 0;
   out_9205111709488920692[205] = 0;
   out_9205111709488920692[206] = 0;
   out_9205111709488920692[207] = 0;
   out_9205111709488920692[208] = 0;
   out_9205111709488920692[209] = 0;
   out_9205111709488920692[210] = 0;
   out_9205111709488920692[211] = 0;
   out_9205111709488920692[212] = 0;
   out_9205111709488920692[213] = 0;
   out_9205111709488920692[214] = 0;
   out_9205111709488920692[215] = 0;
   out_9205111709488920692[216] = 0;
   out_9205111709488920692[217] = 0;
   out_9205111709488920692[218] = 0;
   out_9205111709488920692[219] = 0;
   out_9205111709488920692[220] = 1;
   out_9205111709488920692[221] = 0;
   out_9205111709488920692[222] = 0;
   out_9205111709488920692[223] = 0;
   out_9205111709488920692[224] = 0;
   out_9205111709488920692[225] = 0;
   out_9205111709488920692[226] = 0;
   out_9205111709488920692[227] = 0;
   out_9205111709488920692[228] = 0;
   out_9205111709488920692[229] = 0;
   out_9205111709488920692[230] = 0;
   out_9205111709488920692[231] = 0;
   out_9205111709488920692[232] = 0;
   out_9205111709488920692[233] = 0;
   out_9205111709488920692[234] = 0;
   out_9205111709488920692[235] = 0;
   out_9205111709488920692[236] = 0;
   out_9205111709488920692[237] = 0;
   out_9205111709488920692[238] = 0;
   out_9205111709488920692[239] = 0;
   out_9205111709488920692[240] = 0;
   out_9205111709488920692[241] = 0;
   out_9205111709488920692[242] = 1;
   out_9205111709488920692[243] = 0;
   out_9205111709488920692[244] = 0;
   out_9205111709488920692[245] = 0;
   out_9205111709488920692[246] = 0;
   out_9205111709488920692[247] = 0;
   out_9205111709488920692[248] = 0;
   out_9205111709488920692[249] = 0;
   out_9205111709488920692[250] = 0;
   out_9205111709488920692[251] = 0;
   out_9205111709488920692[252] = 0;
   out_9205111709488920692[253] = 0;
   out_9205111709488920692[254] = 0;
   out_9205111709488920692[255] = 0;
   out_9205111709488920692[256] = 0;
   out_9205111709488920692[257] = 0;
   out_9205111709488920692[258] = 0;
   out_9205111709488920692[259] = 0;
   out_9205111709488920692[260] = 0;
   out_9205111709488920692[261] = 0;
   out_9205111709488920692[262] = 0;
   out_9205111709488920692[263] = 0;
   out_9205111709488920692[264] = 1;
   out_9205111709488920692[265] = 0;
   out_9205111709488920692[266] = 0;
   out_9205111709488920692[267] = 0;
   out_9205111709488920692[268] = 0;
   out_9205111709488920692[269] = 0;
   out_9205111709488920692[270] = 0;
   out_9205111709488920692[271] = 0;
   out_9205111709488920692[272] = 0;
   out_9205111709488920692[273] = 0;
   out_9205111709488920692[274] = 0;
   out_9205111709488920692[275] = 0;
   out_9205111709488920692[276] = 0;
   out_9205111709488920692[277] = 0;
   out_9205111709488920692[278] = 0;
   out_9205111709488920692[279] = 0;
   out_9205111709488920692[280] = 0;
   out_9205111709488920692[281] = 0;
   out_9205111709488920692[282] = 0;
   out_9205111709488920692[283] = 0;
   out_9205111709488920692[284] = 0;
   out_9205111709488920692[285] = 0;
   out_9205111709488920692[286] = 1;
   out_9205111709488920692[287] = 0;
   out_9205111709488920692[288] = 0;
   out_9205111709488920692[289] = 0;
   out_9205111709488920692[290] = 0;
   out_9205111709488920692[291] = 0;
   out_9205111709488920692[292] = 0;
   out_9205111709488920692[293] = 0;
   out_9205111709488920692[294] = 0;
   out_9205111709488920692[295] = 0;
   out_9205111709488920692[296] = 0;
   out_9205111709488920692[297] = 0;
   out_9205111709488920692[298] = 0;
   out_9205111709488920692[299] = 0;
   out_9205111709488920692[300] = 0;
   out_9205111709488920692[301] = 0;
   out_9205111709488920692[302] = 0;
   out_9205111709488920692[303] = 0;
   out_9205111709488920692[304] = 0;
   out_9205111709488920692[305] = 0;
   out_9205111709488920692[306] = 0;
   out_9205111709488920692[307] = 0;
   out_9205111709488920692[308] = 1;
   out_9205111709488920692[309] = 0;
   out_9205111709488920692[310] = 0;
   out_9205111709488920692[311] = 0;
   out_9205111709488920692[312] = 0;
   out_9205111709488920692[313] = 0;
   out_9205111709488920692[314] = 0;
   out_9205111709488920692[315] = 0;
   out_9205111709488920692[316] = 0;
   out_9205111709488920692[317] = 0;
   out_9205111709488920692[318] = 0;
   out_9205111709488920692[319] = 0;
   out_9205111709488920692[320] = 0;
   out_9205111709488920692[321] = 0;
   out_9205111709488920692[322] = 0;
   out_9205111709488920692[323] = 0;
   out_9205111709488920692[324] = 0;
   out_9205111709488920692[325] = 0;
   out_9205111709488920692[326] = 0;
   out_9205111709488920692[327] = 0;
   out_9205111709488920692[328] = 0;
   out_9205111709488920692[329] = 0;
   out_9205111709488920692[330] = 1;
   out_9205111709488920692[331] = 0;
   out_9205111709488920692[332] = 0;
   out_9205111709488920692[333] = 0;
   out_9205111709488920692[334] = 0;
   out_9205111709488920692[335] = 0;
   out_9205111709488920692[336] = 0;
   out_9205111709488920692[337] = 0;
   out_9205111709488920692[338] = 0;
   out_9205111709488920692[339] = 0;
   out_9205111709488920692[340] = 0;
   out_9205111709488920692[341] = 0;
   out_9205111709488920692[342] = 0;
   out_9205111709488920692[343] = 0;
   out_9205111709488920692[344] = 0;
   out_9205111709488920692[345] = 0;
   out_9205111709488920692[346] = 0;
   out_9205111709488920692[347] = 0;
   out_9205111709488920692[348] = 0;
   out_9205111709488920692[349] = 0;
   out_9205111709488920692[350] = 0;
   out_9205111709488920692[351] = 0;
   out_9205111709488920692[352] = 1;
   out_9205111709488920692[353] = 0;
   out_9205111709488920692[354] = 0;
   out_9205111709488920692[355] = 0;
   out_9205111709488920692[356] = 0;
   out_9205111709488920692[357] = 0;
   out_9205111709488920692[358] = 0;
   out_9205111709488920692[359] = 0;
   out_9205111709488920692[360] = 0;
   out_9205111709488920692[361] = 0;
   out_9205111709488920692[362] = 0;
   out_9205111709488920692[363] = 0;
   out_9205111709488920692[364] = 0;
   out_9205111709488920692[365] = 0;
   out_9205111709488920692[366] = 0;
   out_9205111709488920692[367] = 0;
   out_9205111709488920692[368] = 0;
   out_9205111709488920692[369] = 0;
   out_9205111709488920692[370] = 0;
   out_9205111709488920692[371] = 0;
   out_9205111709488920692[372] = 0;
   out_9205111709488920692[373] = 0;
   out_9205111709488920692[374] = 1;
   out_9205111709488920692[375] = 0;
   out_9205111709488920692[376] = 0;
   out_9205111709488920692[377] = 0;
   out_9205111709488920692[378] = 0;
   out_9205111709488920692[379] = 0;
   out_9205111709488920692[380] = 0;
   out_9205111709488920692[381] = 0;
   out_9205111709488920692[382] = 0;
   out_9205111709488920692[383] = 0;
   out_9205111709488920692[384] = 0;
   out_9205111709488920692[385] = 0;
   out_9205111709488920692[386] = 0;
   out_9205111709488920692[387] = 0;
   out_9205111709488920692[388] = 0;
   out_9205111709488920692[389] = 0;
   out_9205111709488920692[390] = 0;
   out_9205111709488920692[391] = 0;
   out_9205111709488920692[392] = 0;
   out_9205111709488920692[393] = 0;
   out_9205111709488920692[394] = 0;
   out_9205111709488920692[395] = 0;
   out_9205111709488920692[396] = 1;
   out_9205111709488920692[397] = 0;
   out_9205111709488920692[398] = 0;
   out_9205111709488920692[399] = 0;
   out_9205111709488920692[400] = 0;
   out_9205111709488920692[401] = 0;
   out_9205111709488920692[402] = 0;
   out_9205111709488920692[403] = 0;
   out_9205111709488920692[404] = 0;
   out_9205111709488920692[405] = 0;
   out_9205111709488920692[406] = 0;
   out_9205111709488920692[407] = 0;
   out_9205111709488920692[408] = 0;
   out_9205111709488920692[409] = 0;
   out_9205111709488920692[410] = 0;
   out_9205111709488920692[411] = 0;
   out_9205111709488920692[412] = 0;
   out_9205111709488920692[413] = 0;
   out_9205111709488920692[414] = 0;
   out_9205111709488920692[415] = 0;
   out_9205111709488920692[416] = 0;
   out_9205111709488920692[417] = 0;
   out_9205111709488920692[418] = 1;
   out_9205111709488920692[419] = 0;
   out_9205111709488920692[420] = 0;
   out_9205111709488920692[421] = 0;
   out_9205111709488920692[422] = 0;
   out_9205111709488920692[423] = 0;
   out_9205111709488920692[424] = 0;
   out_9205111709488920692[425] = 0;
   out_9205111709488920692[426] = 0;
   out_9205111709488920692[427] = 0;
   out_9205111709488920692[428] = 0;
   out_9205111709488920692[429] = 0;
   out_9205111709488920692[430] = 0;
   out_9205111709488920692[431] = 0;
   out_9205111709488920692[432] = 0;
   out_9205111709488920692[433] = 0;
   out_9205111709488920692[434] = 0;
   out_9205111709488920692[435] = 0;
   out_9205111709488920692[436] = 0;
   out_9205111709488920692[437] = 0;
   out_9205111709488920692[438] = 0;
   out_9205111709488920692[439] = 0;
   out_9205111709488920692[440] = 1;
}
void h_4(double *state, double *unused, double *out_2358197272576436694) {
   out_2358197272576436694[0] = state[10] + state[13];
   out_2358197272576436694[1] = state[11] + state[14];
   out_2358197272576436694[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4947000358369127463) {
   out_4947000358369127463[0] = 0;
   out_4947000358369127463[1] = 0;
   out_4947000358369127463[2] = 0;
   out_4947000358369127463[3] = 0;
   out_4947000358369127463[4] = 0;
   out_4947000358369127463[5] = 0;
   out_4947000358369127463[6] = 0;
   out_4947000358369127463[7] = 0;
   out_4947000358369127463[8] = 0;
   out_4947000358369127463[9] = 0;
   out_4947000358369127463[10] = 1;
   out_4947000358369127463[11] = 0;
   out_4947000358369127463[12] = 0;
   out_4947000358369127463[13] = 1;
   out_4947000358369127463[14] = 0;
   out_4947000358369127463[15] = 0;
   out_4947000358369127463[16] = 0;
   out_4947000358369127463[17] = 0;
   out_4947000358369127463[18] = 0;
   out_4947000358369127463[19] = 0;
   out_4947000358369127463[20] = 0;
   out_4947000358369127463[21] = 0;
   out_4947000358369127463[22] = 0;
   out_4947000358369127463[23] = 0;
   out_4947000358369127463[24] = 0;
   out_4947000358369127463[25] = 0;
   out_4947000358369127463[26] = 0;
   out_4947000358369127463[27] = 0;
   out_4947000358369127463[28] = 0;
   out_4947000358369127463[29] = 0;
   out_4947000358369127463[30] = 0;
   out_4947000358369127463[31] = 0;
   out_4947000358369127463[32] = 0;
   out_4947000358369127463[33] = 1;
   out_4947000358369127463[34] = 0;
   out_4947000358369127463[35] = 0;
   out_4947000358369127463[36] = 1;
   out_4947000358369127463[37] = 0;
   out_4947000358369127463[38] = 0;
   out_4947000358369127463[39] = 0;
   out_4947000358369127463[40] = 0;
   out_4947000358369127463[41] = 0;
   out_4947000358369127463[42] = 0;
   out_4947000358369127463[43] = 0;
   out_4947000358369127463[44] = 0;
   out_4947000358369127463[45] = 0;
   out_4947000358369127463[46] = 0;
   out_4947000358369127463[47] = 0;
   out_4947000358369127463[48] = 0;
   out_4947000358369127463[49] = 0;
   out_4947000358369127463[50] = 0;
   out_4947000358369127463[51] = 0;
   out_4947000358369127463[52] = 0;
   out_4947000358369127463[53] = 0;
   out_4947000358369127463[54] = 0;
   out_4947000358369127463[55] = 0;
   out_4947000358369127463[56] = 1;
   out_4947000358369127463[57] = 0;
   out_4947000358369127463[58] = 0;
   out_4947000358369127463[59] = 1;
   out_4947000358369127463[60] = 0;
   out_4947000358369127463[61] = 0;
   out_4947000358369127463[62] = 0;
   out_4947000358369127463[63] = 0;
   out_4947000358369127463[64] = 0;
   out_4947000358369127463[65] = 0;
}
void h_9(double *state, double *unused, double *out_385849584469780270) {
   out_385849584469780270[0] = state[10];
   out_385849584469780270[1] = state[11];
   out_385849584469780270[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6212524780075976683) {
   out_6212524780075976683[0] = 0;
   out_6212524780075976683[1] = 0;
   out_6212524780075976683[2] = 0;
   out_6212524780075976683[3] = 0;
   out_6212524780075976683[4] = 0;
   out_6212524780075976683[5] = 0;
   out_6212524780075976683[6] = 0;
   out_6212524780075976683[7] = 0;
   out_6212524780075976683[8] = 0;
   out_6212524780075976683[9] = 0;
   out_6212524780075976683[10] = 1;
   out_6212524780075976683[11] = 0;
   out_6212524780075976683[12] = 0;
   out_6212524780075976683[13] = 0;
   out_6212524780075976683[14] = 0;
   out_6212524780075976683[15] = 0;
   out_6212524780075976683[16] = 0;
   out_6212524780075976683[17] = 0;
   out_6212524780075976683[18] = 0;
   out_6212524780075976683[19] = 0;
   out_6212524780075976683[20] = 0;
   out_6212524780075976683[21] = 0;
   out_6212524780075976683[22] = 0;
   out_6212524780075976683[23] = 0;
   out_6212524780075976683[24] = 0;
   out_6212524780075976683[25] = 0;
   out_6212524780075976683[26] = 0;
   out_6212524780075976683[27] = 0;
   out_6212524780075976683[28] = 0;
   out_6212524780075976683[29] = 0;
   out_6212524780075976683[30] = 0;
   out_6212524780075976683[31] = 0;
   out_6212524780075976683[32] = 0;
   out_6212524780075976683[33] = 1;
   out_6212524780075976683[34] = 0;
   out_6212524780075976683[35] = 0;
   out_6212524780075976683[36] = 0;
   out_6212524780075976683[37] = 0;
   out_6212524780075976683[38] = 0;
   out_6212524780075976683[39] = 0;
   out_6212524780075976683[40] = 0;
   out_6212524780075976683[41] = 0;
   out_6212524780075976683[42] = 0;
   out_6212524780075976683[43] = 0;
   out_6212524780075976683[44] = 0;
   out_6212524780075976683[45] = 0;
   out_6212524780075976683[46] = 0;
   out_6212524780075976683[47] = 0;
   out_6212524780075976683[48] = 0;
   out_6212524780075976683[49] = 0;
   out_6212524780075976683[50] = 0;
   out_6212524780075976683[51] = 0;
   out_6212524780075976683[52] = 0;
   out_6212524780075976683[53] = 0;
   out_6212524780075976683[54] = 0;
   out_6212524780075976683[55] = 0;
   out_6212524780075976683[56] = 1;
   out_6212524780075976683[57] = 0;
   out_6212524780075976683[58] = 0;
   out_6212524780075976683[59] = 0;
   out_6212524780075976683[60] = 0;
   out_6212524780075976683[61] = 0;
   out_6212524780075976683[62] = 0;
   out_6212524780075976683[63] = 0;
   out_6212524780075976683[64] = 0;
   out_6212524780075976683[65] = 0;
}
void h_10(double *state, double *unused, double *out_2567975715080056660) {
   out_2567975715080056660[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2567975715080056660[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2567975715080056660[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_571864675711830003) {
   out_571864675711830003[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_571864675711830003[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_571864675711830003[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_571864675711830003[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_571864675711830003[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_571864675711830003[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_571864675711830003[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_571864675711830003[7] = 0;
   out_571864675711830003[8] = 0;
   out_571864675711830003[9] = 0;
   out_571864675711830003[10] = 0;
   out_571864675711830003[11] = 0;
   out_571864675711830003[12] = 0;
   out_571864675711830003[13] = 0;
   out_571864675711830003[14] = 0;
   out_571864675711830003[15] = 0;
   out_571864675711830003[16] = 1;
   out_571864675711830003[17] = 0;
   out_571864675711830003[18] = 0;
   out_571864675711830003[19] = 1;
   out_571864675711830003[20] = 0;
   out_571864675711830003[21] = 0;
   out_571864675711830003[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_571864675711830003[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_571864675711830003[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_571864675711830003[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_571864675711830003[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_571864675711830003[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_571864675711830003[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_571864675711830003[29] = 0;
   out_571864675711830003[30] = 0;
   out_571864675711830003[31] = 0;
   out_571864675711830003[32] = 0;
   out_571864675711830003[33] = 0;
   out_571864675711830003[34] = 0;
   out_571864675711830003[35] = 0;
   out_571864675711830003[36] = 0;
   out_571864675711830003[37] = 0;
   out_571864675711830003[38] = 0;
   out_571864675711830003[39] = 1;
   out_571864675711830003[40] = 0;
   out_571864675711830003[41] = 0;
   out_571864675711830003[42] = 1;
   out_571864675711830003[43] = 0;
   out_571864675711830003[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_571864675711830003[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_571864675711830003[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_571864675711830003[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_571864675711830003[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_571864675711830003[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_571864675711830003[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_571864675711830003[51] = 0;
   out_571864675711830003[52] = 0;
   out_571864675711830003[53] = 0;
   out_571864675711830003[54] = 0;
   out_571864675711830003[55] = 0;
   out_571864675711830003[56] = 0;
   out_571864675711830003[57] = 0;
   out_571864675711830003[58] = 0;
   out_571864675711830003[59] = 0;
   out_571864675711830003[60] = 0;
   out_571864675711830003[61] = 0;
   out_571864675711830003[62] = 1;
   out_571864675711830003[63] = 0;
   out_571864675711830003[64] = 0;
   out_571864675711830003[65] = 1;
}
void h_12(double *state, double *unused, double *out_8131953882863353040) {
   out_8131953882863353040[0] = state[0];
   out_8131953882863353040[1] = state[1];
   out_8131953882863353040[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1434258018673605533) {
   out_1434258018673605533[0] = 1;
   out_1434258018673605533[1] = 0;
   out_1434258018673605533[2] = 0;
   out_1434258018673605533[3] = 0;
   out_1434258018673605533[4] = 0;
   out_1434258018673605533[5] = 0;
   out_1434258018673605533[6] = 0;
   out_1434258018673605533[7] = 0;
   out_1434258018673605533[8] = 0;
   out_1434258018673605533[9] = 0;
   out_1434258018673605533[10] = 0;
   out_1434258018673605533[11] = 0;
   out_1434258018673605533[12] = 0;
   out_1434258018673605533[13] = 0;
   out_1434258018673605533[14] = 0;
   out_1434258018673605533[15] = 0;
   out_1434258018673605533[16] = 0;
   out_1434258018673605533[17] = 0;
   out_1434258018673605533[18] = 0;
   out_1434258018673605533[19] = 0;
   out_1434258018673605533[20] = 0;
   out_1434258018673605533[21] = 0;
   out_1434258018673605533[22] = 0;
   out_1434258018673605533[23] = 1;
   out_1434258018673605533[24] = 0;
   out_1434258018673605533[25] = 0;
   out_1434258018673605533[26] = 0;
   out_1434258018673605533[27] = 0;
   out_1434258018673605533[28] = 0;
   out_1434258018673605533[29] = 0;
   out_1434258018673605533[30] = 0;
   out_1434258018673605533[31] = 0;
   out_1434258018673605533[32] = 0;
   out_1434258018673605533[33] = 0;
   out_1434258018673605533[34] = 0;
   out_1434258018673605533[35] = 0;
   out_1434258018673605533[36] = 0;
   out_1434258018673605533[37] = 0;
   out_1434258018673605533[38] = 0;
   out_1434258018673605533[39] = 0;
   out_1434258018673605533[40] = 0;
   out_1434258018673605533[41] = 0;
   out_1434258018673605533[42] = 0;
   out_1434258018673605533[43] = 0;
   out_1434258018673605533[44] = 0;
   out_1434258018673605533[45] = 0;
   out_1434258018673605533[46] = 1;
   out_1434258018673605533[47] = 0;
   out_1434258018673605533[48] = 0;
   out_1434258018673605533[49] = 0;
   out_1434258018673605533[50] = 0;
   out_1434258018673605533[51] = 0;
   out_1434258018673605533[52] = 0;
   out_1434258018673605533[53] = 0;
   out_1434258018673605533[54] = 0;
   out_1434258018673605533[55] = 0;
   out_1434258018673605533[56] = 0;
   out_1434258018673605533[57] = 0;
   out_1434258018673605533[58] = 0;
   out_1434258018673605533[59] = 0;
   out_1434258018673605533[60] = 0;
   out_1434258018673605533[61] = 0;
   out_1434258018673605533[62] = 0;
   out_1434258018673605533[63] = 0;
   out_1434258018673605533[64] = 0;
   out_1434258018673605533[65] = 0;
}
void h_35(double *state, double *unused, double *out_2371272486677336243) {
   out_2371272486677336243[0] = state[7];
   out_2371272486677336243[1] = state[8];
   out_2371272486677336243[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3087052369332959952) {
   out_3087052369332959952[0] = 0;
   out_3087052369332959952[1] = 0;
   out_3087052369332959952[2] = 0;
   out_3087052369332959952[3] = 0;
   out_3087052369332959952[4] = 0;
   out_3087052369332959952[5] = 0;
   out_3087052369332959952[6] = 0;
   out_3087052369332959952[7] = 1;
   out_3087052369332959952[8] = 0;
   out_3087052369332959952[9] = 0;
   out_3087052369332959952[10] = 0;
   out_3087052369332959952[11] = 0;
   out_3087052369332959952[12] = 0;
   out_3087052369332959952[13] = 0;
   out_3087052369332959952[14] = 0;
   out_3087052369332959952[15] = 0;
   out_3087052369332959952[16] = 0;
   out_3087052369332959952[17] = 0;
   out_3087052369332959952[18] = 0;
   out_3087052369332959952[19] = 0;
   out_3087052369332959952[20] = 0;
   out_3087052369332959952[21] = 0;
   out_3087052369332959952[22] = 0;
   out_3087052369332959952[23] = 0;
   out_3087052369332959952[24] = 0;
   out_3087052369332959952[25] = 0;
   out_3087052369332959952[26] = 0;
   out_3087052369332959952[27] = 0;
   out_3087052369332959952[28] = 0;
   out_3087052369332959952[29] = 0;
   out_3087052369332959952[30] = 1;
   out_3087052369332959952[31] = 0;
   out_3087052369332959952[32] = 0;
   out_3087052369332959952[33] = 0;
   out_3087052369332959952[34] = 0;
   out_3087052369332959952[35] = 0;
   out_3087052369332959952[36] = 0;
   out_3087052369332959952[37] = 0;
   out_3087052369332959952[38] = 0;
   out_3087052369332959952[39] = 0;
   out_3087052369332959952[40] = 0;
   out_3087052369332959952[41] = 0;
   out_3087052369332959952[42] = 0;
   out_3087052369332959952[43] = 0;
   out_3087052369332959952[44] = 0;
   out_3087052369332959952[45] = 0;
   out_3087052369332959952[46] = 0;
   out_3087052369332959952[47] = 0;
   out_3087052369332959952[48] = 0;
   out_3087052369332959952[49] = 0;
   out_3087052369332959952[50] = 0;
   out_3087052369332959952[51] = 0;
   out_3087052369332959952[52] = 0;
   out_3087052369332959952[53] = 1;
   out_3087052369332959952[54] = 0;
   out_3087052369332959952[55] = 0;
   out_3087052369332959952[56] = 0;
   out_3087052369332959952[57] = 0;
   out_3087052369332959952[58] = 0;
   out_3087052369332959952[59] = 0;
   out_3087052369332959952[60] = 0;
   out_3087052369332959952[61] = 0;
   out_3087052369332959952[62] = 0;
   out_3087052369332959952[63] = 0;
   out_3087052369332959952[64] = 0;
   out_3087052369332959952[65] = 0;
}
void h_32(double *state, double *unused, double *out_8832656386972401992) {
   out_8832656386972401992[0] = state[3];
   out_8832656386972401992[1] = state[4];
   out_8832656386972401992[2] = state[5];
   out_8832656386972401992[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4094963178069825769) {
   out_4094963178069825769[0] = 0;
   out_4094963178069825769[1] = 0;
   out_4094963178069825769[2] = 0;
   out_4094963178069825769[3] = 1;
   out_4094963178069825769[4] = 0;
   out_4094963178069825769[5] = 0;
   out_4094963178069825769[6] = 0;
   out_4094963178069825769[7] = 0;
   out_4094963178069825769[8] = 0;
   out_4094963178069825769[9] = 0;
   out_4094963178069825769[10] = 0;
   out_4094963178069825769[11] = 0;
   out_4094963178069825769[12] = 0;
   out_4094963178069825769[13] = 0;
   out_4094963178069825769[14] = 0;
   out_4094963178069825769[15] = 0;
   out_4094963178069825769[16] = 0;
   out_4094963178069825769[17] = 0;
   out_4094963178069825769[18] = 0;
   out_4094963178069825769[19] = 0;
   out_4094963178069825769[20] = 0;
   out_4094963178069825769[21] = 0;
   out_4094963178069825769[22] = 0;
   out_4094963178069825769[23] = 0;
   out_4094963178069825769[24] = 0;
   out_4094963178069825769[25] = 0;
   out_4094963178069825769[26] = 1;
   out_4094963178069825769[27] = 0;
   out_4094963178069825769[28] = 0;
   out_4094963178069825769[29] = 0;
   out_4094963178069825769[30] = 0;
   out_4094963178069825769[31] = 0;
   out_4094963178069825769[32] = 0;
   out_4094963178069825769[33] = 0;
   out_4094963178069825769[34] = 0;
   out_4094963178069825769[35] = 0;
   out_4094963178069825769[36] = 0;
   out_4094963178069825769[37] = 0;
   out_4094963178069825769[38] = 0;
   out_4094963178069825769[39] = 0;
   out_4094963178069825769[40] = 0;
   out_4094963178069825769[41] = 0;
   out_4094963178069825769[42] = 0;
   out_4094963178069825769[43] = 0;
   out_4094963178069825769[44] = 0;
   out_4094963178069825769[45] = 0;
   out_4094963178069825769[46] = 0;
   out_4094963178069825769[47] = 0;
   out_4094963178069825769[48] = 0;
   out_4094963178069825769[49] = 1;
   out_4094963178069825769[50] = 0;
   out_4094963178069825769[51] = 0;
   out_4094963178069825769[52] = 0;
   out_4094963178069825769[53] = 0;
   out_4094963178069825769[54] = 0;
   out_4094963178069825769[55] = 0;
   out_4094963178069825769[56] = 0;
   out_4094963178069825769[57] = 0;
   out_4094963178069825769[58] = 0;
   out_4094963178069825769[59] = 0;
   out_4094963178069825769[60] = 0;
   out_4094963178069825769[61] = 0;
   out_4094963178069825769[62] = 0;
   out_4094963178069825769[63] = 0;
   out_4094963178069825769[64] = 0;
   out_4094963178069825769[65] = 0;
   out_4094963178069825769[66] = 0;
   out_4094963178069825769[67] = 0;
   out_4094963178069825769[68] = 0;
   out_4094963178069825769[69] = 0;
   out_4094963178069825769[70] = 0;
   out_4094963178069825769[71] = 0;
   out_4094963178069825769[72] = 1;
   out_4094963178069825769[73] = 0;
   out_4094963178069825769[74] = 0;
   out_4094963178069825769[75] = 0;
   out_4094963178069825769[76] = 0;
   out_4094963178069825769[77] = 0;
   out_4094963178069825769[78] = 0;
   out_4094963178069825769[79] = 0;
   out_4094963178069825769[80] = 0;
   out_4094963178069825769[81] = 0;
   out_4094963178069825769[82] = 0;
   out_4094963178069825769[83] = 0;
   out_4094963178069825769[84] = 0;
   out_4094963178069825769[85] = 0;
   out_4094963178069825769[86] = 0;
   out_4094963178069825769[87] = 0;
}
void h_13(double *state, double *unused, double *out_3950732492360766849) {
   out_3950732492360766849[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3950732492360766849[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3950732492360766849[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2366987762894106980) {
   out_2366987762894106980[0] = 0;
   out_2366987762894106980[1] = 0;
   out_2366987762894106980[2] = 0;
   out_2366987762894106980[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2366987762894106980[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2366987762894106980[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2366987762894106980[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2366987762894106980[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2366987762894106980[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2366987762894106980[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2366987762894106980[10] = 0;
   out_2366987762894106980[11] = 0;
   out_2366987762894106980[12] = 0;
   out_2366987762894106980[13] = 0;
   out_2366987762894106980[14] = 0;
   out_2366987762894106980[15] = 0;
   out_2366987762894106980[16] = 0;
   out_2366987762894106980[17] = 0;
   out_2366987762894106980[18] = 0;
   out_2366987762894106980[19] = 0;
   out_2366987762894106980[20] = 0;
   out_2366987762894106980[21] = 0;
   out_2366987762894106980[22] = 0;
   out_2366987762894106980[23] = 0;
   out_2366987762894106980[24] = 0;
   out_2366987762894106980[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2366987762894106980[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2366987762894106980[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2366987762894106980[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2366987762894106980[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2366987762894106980[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2366987762894106980[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2366987762894106980[32] = 0;
   out_2366987762894106980[33] = 0;
   out_2366987762894106980[34] = 0;
   out_2366987762894106980[35] = 0;
   out_2366987762894106980[36] = 0;
   out_2366987762894106980[37] = 0;
   out_2366987762894106980[38] = 0;
   out_2366987762894106980[39] = 0;
   out_2366987762894106980[40] = 0;
   out_2366987762894106980[41] = 0;
   out_2366987762894106980[42] = 0;
   out_2366987762894106980[43] = 0;
   out_2366987762894106980[44] = 0;
   out_2366987762894106980[45] = 0;
   out_2366987762894106980[46] = 0;
   out_2366987762894106980[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2366987762894106980[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2366987762894106980[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2366987762894106980[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2366987762894106980[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2366987762894106980[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2366987762894106980[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2366987762894106980[54] = 0;
   out_2366987762894106980[55] = 0;
   out_2366987762894106980[56] = 0;
   out_2366987762894106980[57] = 0;
   out_2366987762894106980[58] = 0;
   out_2366987762894106980[59] = 0;
   out_2366987762894106980[60] = 0;
   out_2366987762894106980[61] = 0;
   out_2366987762894106980[62] = 0;
   out_2366987762894106980[63] = 0;
   out_2366987762894106980[64] = 0;
   out_2366987762894106980[65] = 0;
}
void h_14(double *state, double *unused, double *out_385849584469780270) {
   out_385849584469780270[0] = state[10];
   out_385849584469780270[1] = state[11];
   out_385849584469780270[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6212524780075976683) {
   out_6212524780075976683[0] = 0;
   out_6212524780075976683[1] = 0;
   out_6212524780075976683[2] = 0;
   out_6212524780075976683[3] = 0;
   out_6212524780075976683[4] = 0;
   out_6212524780075976683[5] = 0;
   out_6212524780075976683[6] = 0;
   out_6212524780075976683[7] = 0;
   out_6212524780075976683[8] = 0;
   out_6212524780075976683[9] = 0;
   out_6212524780075976683[10] = 1;
   out_6212524780075976683[11] = 0;
   out_6212524780075976683[12] = 0;
   out_6212524780075976683[13] = 0;
   out_6212524780075976683[14] = 0;
   out_6212524780075976683[15] = 0;
   out_6212524780075976683[16] = 0;
   out_6212524780075976683[17] = 0;
   out_6212524780075976683[18] = 0;
   out_6212524780075976683[19] = 0;
   out_6212524780075976683[20] = 0;
   out_6212524780075976683[21] = 0;
   out_6212524780075976683[22] = 0;
   out_6212524780075976683[23] = 0;
   out_6212524780075976683[24] = 0;
   out_6212524780075976683[25] = 0;
   out_6212524780075976683[26] = 0;
   out_6212524780075976683[27] = 0;
   out_6212524780075976683[28] = 0;
   out_6212524780075976683[29] = 0;
   out_6212524780075976683[30] = 0;
   out_6212524780075976683[31] = 0;
   out_6212524780075976683[32] = 0;
   out_6212524780075976683[33] = 1;
   out_6212524780075976683[34] = 0;
   out_6212524780075976683[35] = 0;
   out_6212524780075976683[36] = 0;
   out_6212524780075976683[37] = 0;
   out_6212524780075976683[38] = 0;
   out_6212524780075976683[39] = 0;
   out_6212524780075976683[40] = 0;
   out_6212524780075976683[41] = 0;
   out_6212524780075976683[42] = 0;
   out_6212524780075976683[43] = 0;
   out_6212524780075976683[44] = 0;
   out_6212524780075976683[45] = 0;
   out_6212524780075976683[46] = 0;
   out_6212524780075976683[47] = 0;
   out_6212524780075976683[48] = 0;
   out_6212524780075976683[49] = 0;
   out_6212524780075976683[50] = 0;
   out_6212524780075976683[51] = 0;
   out_6212524780075976683[52] = 0;
   out_6212524780075976683[53] = 0;
   out_6212524780075976683[54] = 0;
   out_6212524780075976683[55] = 0;
   out_6212524780075976683[56] = 1;
   out_6212524780075976683[57] = 0;
   out_6212524780075976683[58] = 0;
   out_6212524780075976683[59] = 0;
   out_6212524780075976683[60] = 0;
   out_6212524780075976683[61] = 0;
   out_6212524780075976683[62] = 0;
   out_6212524780075976683[63] = 0;
   out_6212524780075976683[64] = 0;
   out_6212524780075976683[65] = 0;
}
void h_33(double *state, double *unused, double *out_9045185635883086757) {
   out_9045185635883086757[0] = state[16];
   out_9045185635883086757[1] = state[17];
   out_9045185635883086757[2] = state[18];
}
void H_33(double *state, double *unused, double *out_63504635305897652) {
   out_63504635305897652[0] = 0;
   out_63504635305897652[1] = 0;
   out_63504635305897652[2] = 0;
   out_63504635305897652[3] = 0;
   out_63504635305897652[4] = 0;
   out_63504635305897652[5] = 0;
   out_63504635305897652[6] = 0;
   out_63504635305897652[7] = 0;
   out_63504635305897652[8] = 0;
   out_63504635305897652[9] = 0;
   out_63504635305897652[10] = 0;
   out_63504635305897652[11] = 0;
   out_63504635305897652[12] = 0;
   out_63504635305897652[13] = 0;
   out_63504635305897652[14] = 0;
   out_63504635305897652[15] = 0;
   out_63504635305897652[16] = 1;
   out_63504635305897652[17] = 0;
   out_63504635305897652[18] = 0;
   out_63504635305897652[19] = 0;
   out_63504635305897652[20] = 0;
   out_63504635305897652[21] = 0;
   out_63504635305897652[22] = 0;
   out_63504635305897652[23] = 0;
   out_63504635305897652[24] = 0;
   out_63504635305897652[25] = 0;
   out_63504635305897652[26] = 0;
   out_63504635305897652[27] = 0;
   out_63504635305897652[28] = 0;
   out_63504635305897652[29] = 0;
   out_63504635305897652[30] = 0;
   out_63504635305897652[31] = 0;
   out_63504635305897652[32] = 0;
   out_63504635305897652[33] = 0;
   out_63504635305897652[34] = 0;
   out_63504635305897652[35] = 0;
   out_63504635305897652[36] = 0;
   out_63504635305897652[37] = 0;
   out_63504635305897652[38] = 0;
   out_63504635305897652[39] = 1;
   out_63504635305897652[40] = 0;
   out_63504635305897652[41] = 0;
   out_63504635305897652[42] = 0;
   out_63504635305897652[43] = 0;
   out_63504635305897652[44] = 0;
   out_63504635305897652[45] = 0;
   out_63504635305897652[46] = 0;
   out_63504635305897652[47] = 0;
   out_63504635305897652[48] = 0;
   out_63504635305897652[49] = 0;
   out_63504635305897652[50] = 0;
   out_63504635305897652[51] = 0;
   out_63504635305897652[52] = 0;
   out_63504635305897652[53] = 0;
   out_63504635305897652[54] = 0;
   out_63504635305897652[55] = 0;
   out_63504635305897652[56] = 0;
   out_63504635305897652[57] = 0;
   out_63504635305897652[58] = 0;
   out_63504635305897652[59] = 0;
   out_63504635305897652[60] = 0;
   out_63504635305897652[61] = 0;
   out_63504635305897652[62] = 1;
   out_63504635305897652[63] = 0;
   out_63504635305897652[64] = 0;
   out_63504635305897652[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_214500349649226956) {
  H(in_vec, out_214500349649226956);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4930751168403226085) {
  err_fun(nom_x, delta_x, out_4930751168403226085);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5324820040472701178) {
  inv_err_fun(nom_x, true_x, out_5324820040472701178);
}
void live_H_mod_fun(double *state, double *out_5188937138529325432) {
  H_mod_fun(state, out_5188937138529325432);
}
void live_f_fun(double *state, double dt, double *out_7723766835351807537) {
  f_fun(state,  dt, out_7723766835351807537);
}
void live_F_fun(double *state, double dt, double *out_9205111709488920692) {
  F_fun(state,  dt, out_9205111709488920692);
}
void live_h_4(double *state, double *unused, double *out_2358197272576436694) {
  h_4(state, unused, out_2358197272576436694);
}
void live_H_4(double *state, double *unused, double *out_4947000358369127463) {
  H_4(state, unused, out_4947000358369127463);
}
void live_h_9(double *state, double *unused, double *out_385849584469780270) {
  h_9(state, unused, out_385849584469780270);
}
void live_H_9(double *state, double *unused, double *out_6212524780075976683) {
  H_9(state, unused, out_6212524780075976683);
}
void live_h_10(double *state, double *unused, double *out_2567975715080056660) {
  h_10(state, unused, out_2567975715080056660);
}
void live_H_10(double *state, double *unused, double *out_571864675711830003) {
  H_10(state, unused, out_571864675711830003);
}
void live_h_12(double *state, double *unused, double *out_8131953882863353040) {
  h_12(state, unused, out_8131953882863353040);
}
void live_H_12(double *state, double *unused, double *out_1434258018673605533) {
  H_12(state, unused, out_1434258018673605533);
}
void live_h_35(double *state, double *unused, double *out_2371272486677336243) {
  h_35(state, unused, out_2371272486677336243);
}
void live_H_35(double *state, double *unused, double *out_3087052369332959952) {
  H_35(state, unused, out_3087052369332959952);
}
void live_h_32(double *state, double *unused, double *out_8832656386972401992) {
  h_32(state, unused, out_8832656386972401992);
}
void live_H_32(double *state, double *unused, double *out_4094963178069825769) {
  H_32(state, unused, out_4094963178069825769);
}
void live_h_13(double *state, double *unused, double *out_3950732492360766849) {
  h_13(state, unused, out_3950732492360766849);
}
void live_H_13(double *state, double *unused, double *out_2366987762894106980) {
  H_13(state, unused, out_2366987762894106980);
}
void live_h_14(double *state, double *unused, double *out_385849584469780270) {
  h_14(state, unused, out_385849584469780270);
}
void live_H_14(double *state, double *unused, double *out_6212524780075976683) {
  H_14(state, unused, out_6212524780075976683);
}
void live_h_33(double *state, double *unused, double *out_9045185635883086757) {
  h_33(state, unused, out_9045185635883086757);
}
void live_H_33(double *state, double *unused, double *out_63504635305897652) {
  H_33(state, unused, out_63504635305897652);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
